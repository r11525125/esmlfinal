// =============================================================================
// Generated by efx_ipmgr
// Version: 2023.1.150
// IP Version: 5.0
// =============================================================================

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2023 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//                                                                       
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//                                                                       
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.                                                
//
////////////////////////////////////////////////////////////////////////////////

`define IP_UUID _3c48db7e8f7a4061b4268f003b844934
`define IP_NAME_CONCAT(a,b) a``b
`define IP_MODULE_NAME(name) `IP_NAME_CONCAT(name,`IP_UUID)
module tse_mac_rgmii (
input mac_reset,
input proto_reset,
input [9:0] s_axi_araddr,
output [1:0] s_axi_rresp,
output rx_mac_aclk,
input tx_mac_aclk,
output [2:0] eth_speed,
output MdoEn,
input rx_axis_clk,
output rx_axis_mac_tuser,
output Mdc,
output rx_axis_mac_tlast,
input Mdi,
output rx_axis_mac_tvalid,
output s_axi_rvalid,
output s_axi_arready,
input rx_axis_mac_tready,
output [31:0] s_axi_rdata,
output s_axi_bresp,
input tx_axis_clk,
input tx_axis_mac_tvalid,
output s_axi_bvalid,
output s_axi_wready,
input s_axi_rready,
input tx_axis_mac_tlast,
output Mdo,
input tx_axis_mac_tuser,
input [31:0] s_axi_wdata,
output tx_axis_mac_tready,
output [3:0] rgmii_txd_HI,
output [3:0] rgmii_txd_LO,
output rgmii_tx_ctl_HI,
output rgmii_tx_ctl_LO,
output rgmii_txc_HI,
output rgmii_txc_LO,
input [3:0] rgmii_rxd_HI,
input [3:0] rgmii_rxd_LO,
input rgmii_rx_ctl_HI,
input rgmii_rx_ctl_LO,
input rgmii_rxc,
input s_axi_aclk,
input s_axi_bready,
input [9:0] s_axi_awaddr,
input s_axi_arvalid,
input s_axi_awvalid,
output s_axi_awready,
input s_axi_wvalid,
output [31:0] rx_axis_mac_tdata,
input [31:0] tx_axis_mac_tdata,
input [3:0] tx_axis_mac_tstrb,
output [3:0] rx_axis_mac_tstrb
);
`IP_MODULE_NAME(tsemac) #(
.VERSION (16),
.TXFIFO_EN (1'b1),
.RXFIFO_EN (1'b1),
.TXFIFO_DTH (2048),
.RXFIFO_DTH (2048),
.PHY_INTF_MODE (0),
.AXIS_DW (32)
) u_tsemac(
.mac_reset ( mac_reset ),
.proto_reset ( proto_reset ),
.s_axi_araddr ( s_axi_araddr ),
.s_axi_rresp ( s_axi_rresp ),
.rx_mac_aclk ( rx_mac_aclk ),
.tx_mac_aclk ( tx_mac_aclk ),
.eth_speed ( eth_speed ),
.MdoEn ( MdoEn ),
.rx_axis_clk ( rx_axis_clk ),
.rx_axis_mac_tuser ( rx_axis_mac_tuser ),
.Mdc ( Mdc ),
.rx_axis_mac_tlast ( rx_axis_mac_tlast ),
.Mdi ( Mdi ),
.rx_axis_mac_tvalid ( rx_axis_mac_tvalid ),
.s_axi_rvalid ( s_axi_rvalid ),
.s_axi_arready ( s_axi_arready ),
.rx_axis_mac_tready ( rx_axis_mac_tready ),
.s_axi_rdata ( s_axi_rdata ),
.s_axi_bresp ( s_axi_bresp ),
.tx_axis_clk ( tx_axis_clk ),
.tx_axis_mac_tvalid ( tx_axis_mac_tvalid ),
.s_axi_bvalid ( s_axi_bvalid ),
.s_axi_wready ( s_axi_wready ),
.s_axi_rready ( s_axi_rready ),
.tx_axis_mac_tlast ( tx_axis_mac_tlast ),
.Mdo ( Mdo ),
.tx_axis_mac_tuser ( tx_axis_mac_tuser ),
.s_axi_wdata ( s_axi_wdata ),
.tx_axis_mac_tready ( tx_axis_mac_tready ),
.rgmii_txd_HI ( rgmii_txd_HI ),
.rgmii_txd_LO ( rgmii_txd_LO ),
.rgmii_tx_ctl_HI ( rgmii_tx_ctl_HI ),
.rgmii_tx_ctl_LO ( rgmii_tx_ctl_LO ),
.rgmii_txc_HI ( rgmii_txc_HI ),
.rgmii_txc_LO ( rgmii_txc_LO ),
.rgmii_rxd_HI ( rgmii_rxd_HI ),
.rgmii_rxd_LO ( rgmii_rxd_LO ),
.rgmii_rx_ctl_HI ( rgmii_rx_ctl_HI ),
.rgmii_rx_ctl_LO ( rgmii_rx_ctl_LO ),
.rgmii_rxc ( rgmii_rxc ),
.s_axi_aclk ( s_axi_aclk ),
.s_axi_bready ( s_axi_bready ),
.s_axi_awaddr ( s_axi_awaddr ),
.s_axi_arvalid ( s_axi_arvalid ),
.s_axi_awvalid ( s_axi_awvalid ),
.s_axi_awready ( s_axi_awready ),
.s_axi_wvalid ( s_axi_wvalid ),
.rx_axis_mac_tdata ( rx_axis_mac_tdata ),
.tx_axis_mac_tdata ( tx_axis_mac_tdata ),
.tx_axis_mac_tstrb ( tx_axis_mac_tstrb ),
.rx_axis_mac_tstrb ( rx_axis_mac_tstrb )
);

endmodule

/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2021 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   simple_dual_port_ram_fifo.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      EFX FIFO
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
//
// *******************************

module `IP_MODULE_NAME(efx_fifo_top) # (
    parameter FAMILY             = "TRION",       // New Param
    parameter SYNC_CLK           = 0,
    parameter BYPASS_RESET_SYNC  = 0,             // New Param
    parameter SYNC_STAGE         = 2,             // New Param
    parameter MODE               = "STANDARD",
    parameter DEPTH              = 512,           // Reverted (Equivalent to WDATA_DEPTH) 
    parameter DATA_WIDTH         = 32,            // Reverted (Equivalent to WDATA_WIDTH)
    parameter PIPELINE_REG       = 1,             // Reverted (By default is ON)
    parameter OPTIONAL_FLAGS     = 1,             // Reverted
    parameter OUTPUT_REG         = 0,
    parameter PROGRAMMABLE_FULL  = "STATIC_DUAL", // Set to "NONE" if not require this feature
    parameter PROG_FULL_ASSERT   = 27,
    parameter PROG_FULL_NEGATE   = 23,
    parameter PROGRAMMABLE_EMPTY = "STATIC_DUAL", // Set to "NONE" if not require this feature
    parameter PROG_EMPTY_ASSERT  = 5,
    parameter PROG_EMPTY_NEGATE  = 7,
    parameter ALMOST_FLAG        = OPTIONAL_FLAGS,
    parameter HANDSHAKE_FLAG     = OPTIONAL_FLAGS,
    parameter ASYM_WIDTH_RATIO   = 4,
    parameter WADDR_WIDTH        = depth2width(DEPTH),
    parameter RDATA_WIDTH        = rdwidthcompute(ASYM_WIDTH_RATIO,DATA_WIDTH),
    parameter RD_DEPTH           = rddepthcompute(DEPTH,DATA_WIDTH,RDATA_WIDTH),
    parameter RADDR_WIDTH        = depth2width(RD_DEPTH),
    parameter ENDIANESS		 = 0

)(
    input  wire                   a_rst_i,
    input  wire                   a_wr_rst_i,
    input  wire                   a_rd_rst_i,
    input  wire                   clk_i,
    input  wire                   wr_clk_i,
    input  wire                   rd_clk_i,
    input  wire                   wr_en_i,
    input  wire                   rd_en_i,
    input  wire [DATA_WIDTH-1:0]  wdata,
    output wire                   almost_full_o,
    output wire                   prog_full_o,
    output wire                   full_o,
    output wire                   overflow_o,
    output wire                   wr_ack_o,
    output wire [WADDR_WIDTH :0]  datacount_o,
    output wire [WADDR_WIDTH :0]  wr_datacount_o,
    output wire                   empty_o,
    output wire                   almost_empty_o,
    output wire                   prog_empty_o,
    output wire                   underflow_o,
    output wire                   rd_valid_o,
    output wire [RDATA_WIDTH-1:0] rdata,
    output wire [RADDR_WIDTH :0]  rd_datacount_o,
    output wire                   rst_busy
); 

localparam WR_DEPTH      = DEPTH;
localparam WDATA_WIDTH   = DATA_WIDTH;
localparam RAM_MUX_RATIO = (RDATA_WIDTH <= WDATA_WIDTH/32) ? 32 :
                           (RDATA_WIDTH <= WDATA_WIDTH/16) ? 16 :
                           (RDATA_WIDTH <= WDATA_WIDTH/8)  ? 8  :
                           (RDATA_WIDTH <= WDATA_WIDTH/4)  ? 4  :
                           (RDATA_WIDTH <= WDATA_WIDTH/2)  ? 2  :
                           (RDATA_WIDTH <= WDATA_WIDTH)    ? 1  :
                           (RDATA_WIDTH <= WDATA_WIDTH*2)  ? 2  :
                           (RDATA_WIDTH <= WDATA_WIDTH*4)  ? 4  :
                           (RDATA_WIDTH <= WDATA_WIDTH*8)  ? 8  :
                           (RDATA_WIDTH <= WDATA_WIDTH*16) ? 16 : 32;           

wire                   wr_rst_int;
wire                   rd_rst_int;
wire                   wr_en_int;
wire                   rd_en_int;
wire [WADDR_WIDTH-1:0] waddr;
wire [RADDR_WIDTH-1:0] raddr;
wire                   wr_clk_int;
wire                   rd_clk_int;
wire [WADDR_WIDTH :0]  wr_datacount_int;
wire [RADDR_WIDTH :0]  rd_datacount_int;

generate
    if (ASYM_WIDTH_RATIO == 4) begin
        if (SYNC_CLK) begin
            assign wr_clk_int     = clk_i;    
            assign rd_clk_int     = clk_i;
            assign datacount_o    = wr_datacount_int;
            assign wr_datacount_o = 'd0;
            assign rd_datacount_o = 'd0;
        end
        else begin
            assign wr_clk_int     = wr_clk_i;    
            assign rd_clk_int     = rd_clk_i;
            assign datacount_o    = 'd0;
            assign wr_datacount_o = wr_datacount_int;
            assign rd_datacount_o = rd_datacount_int;
        end
    end
    else begin
        assign datacount_o    = 'd0;
        assign wr_datacount_o = wr_datacount_int;
        assign rd_datacount_o = rd_datacount_int;
        if (SYNC_CLK) begin
            assign wr_clk_int     = clk_i;    
            assign rd_clk_int     = clk_i;
        end
        else begin
            assign wr_clk_int     = wr_clk_i;    
            assign rd_clk_int     = rd_clk_i;
        end
    end    

    if (!SYNC_CLK) begin
        (* async_reg = "true" *) reg [1:0] wr_rst;
        (* async_reg = "true" *) reg [1:0] rd_rst;
        
        always @ (posedge wr_clk_int or posedge a_rst_i) begin
            if (a_rst_i) 
                wr_rst <= 2'b11;
            else 
                wr_rst <= {wr_rst[0],1'b0};            
        end
        
        always @ (posedge rd_clk_int or posedge a_rst_i) begin
            if (a_rst_i) 
                rd_rst <= 2'b11;
            else 
                rd_rst <= {rd_rst[0],1'b0};            
        end

        if (BYPASS_RESET_SYNC) begin
            assign wr_rst_int = a_wr_rst_i;
            assign rd_rst_int = a_rd_rst_i; 
            assign rst_busy   = 1'b0;
        end 
        else begin
            assign wr_rst_int = wr_rst[1];
            assign rd_rst_int = rd_rst[1]; 
            assign rst_busy   = wr_rst_int | rd_rst_int;
        end
    end
    else begin
        (* async_reg = "true" *) reg [1:0] a_rst;
        
        always @ (posedge clk_i or posedge a_rst_i) begin
            if (a_rst_i) 
                a_rst <= 2'b11;
            else 
                a_rst <= {a_rst[0],1'b0};            
        end

        if (BYPASS_RESET_SYNC) begin
            assign wr_rst_int = a_rst_i;
            assign rd_rst_int = a_rst_i;
            assign rst_busy   = 1'b0;
        end
        else begin
            assign wr_rst_int = a_rst[1];
            assign rd_rst_int = a_rst[1];   
            assign rst_busy   = wr_rst_int | rd_rst_int;
        end
    end 
endgenerate

`IP_MODULE_NAME(efx_fifo_ram) # (
    .FAMILY        (FAMILY),
    .MODE          (MODE),
    .WR_DEPTH      (WR_DEPTH),
    .RD_DEPTH      (RD_DEPTH),
    .WDATA_WIDTH   (WDATA_WIDTH),
    .RDATA_WIDTH   (RDATA_WIDTH),
    .WADDR_WIDTH   (WADDR_WIDTH),
    .RADDR_WIDTH   (RADDR_WIDTH),
    .OUTPUT_REG    (OUTPUT_REG),
    .RAM_MUX_RATIO (RAM_MUX_RATIO),
    .ENDIANESS	   (ENDIANESS)
) xefx_fifo_ram (
    .wdata (wdata), 
    .waddr (waddr),
    .raddr (raddr), 
    .we    (wr_en_int), 
    .re    (rd_en_int),
    .wclk  (wr_clk_int),
    .rclk  (rd_clk_int),
    .rdata (rdata)
);

`IP_MODULE_NAME(efx_fifo_ctl) # (
    .FAMILY             (FAMILY),
    .SYNC_CLK           (SYNC_CLK),
    .SYNC_STAGE         (SYNC_STAGE),
    .MODE               (MODE),
    .WR_DEPTH           (WR_DEPTH),
    .WADDR_WIDTH        (WADDR_WIDTH),
    .RADDR_WIDTH        (RADDR_WIDTH),
    .ASYM_WIDTH_RATIO   (ASYM_WIDTH_RATIO),
    .RAM_MUX_RATIO      (RAM_MUX_RATIO),
    .PIPELINE_REG       (PIPELINE_REG),
    .ALMOST_FLAG        (ALMOST_FLAG),
    .PROGRAMMABLE_FULL  (PROGRAMMABLE_FULL),
    .PROG_FULL_ASSERT   (PROG_FULL_ASSERT),
    .PROG_FULL_NEGATE   (PROG_FULL_NEGATE),
    .PROGRAMMABLE_EMPTY (PROGRAMMABLE_EMPTY),
    .PROG_EMPTY_ASSERT  (PROG_EMPTY_ASSERT),
    .PROG_EMPTY_NEGATE  (PROG_EMPTY_NEGATE),
    .OUTPUT_REG         (OUTPUT_REG),
    .HANDSHAKE_FLAG     (HANDSHAKE_FLAG)
) xefx_fifo_ctl (
    .wr_rst          (wr_rst_int),
    .rd_rst          (rd_rst_int),
    .wclk            (wr_clk_int),
    .rclk            (rd_clk_int),
    .we              (wr_en_i),
    .re              (rd_en_i),
    .wr_full         (full_o),
    .wr_ack          (wr_ack_o),
    .rd_empty        (empty_o),
    .wr_almost_full  (almost_full_o),
    .rd_almost_empty (almost_empty_o),
    .wr_prog_full    (prog_full_o),
    .rd_prog_empty   (prog_empty_o),
    .wr_en_int       (wr_en_int),
    .rd_en_int       (rd_en_int),
    .waddr           (waddr),
    .raddr           (raddr),
    .wr_datacount    (wr_datacount_int),
    .rd_datacount    (rd_datacount_int),
    .rd_vld          (rd_valid_o),
    .wr_overflow     (overflow_o),
    .rd_underflow    (underflow_o)
);

function integer depth2width;
input [31:0] depth;
begin : fnDepth2Width
    if (depth > 1) begin
        depth = depth - 1;
        for (depth2width=0; depth>0; depth2width = depth2width + 1)
            depth = depth>>1;
        end
    else
    depth2width = 0;
end
endfunction 

function integer width2depth;
input [31:0] width;
begin : fnWidth2Depth
    width2depth = width**2;
end
endfunction

function integer rdwidthcompute;
input [31:0] asym_option;
input [31:0] wr_width;
begin : RdWidthCompute
    rdwidthcompute = (asym_option==0)? wr_width/16 :
                     (asym_option==1)? wr_width/8  :
                     (asym_option==2)? wr_width/4  :
                     (asym_option==3)? wr_width/2  :
                     (asym_option==4)? wr_width/1  :
                     (asym_option==5)? wr_width*2  :
                     (asym_option==6)? wr_width*4  :
                     (asym_option==7)? wr_width*8  :
                     (asym_option==8)? wr_width*16 : wr_width/1;
end
endfunction

function integer rddepthcompute;
input [31:0] wr_depth;
input [31:0] wr_width;
input [31:0] rd_width;
begin : RdDepthCompute
    rddepthcompute = (wr_depth * wr_width) / rd_width;
end
endfunction

endmodule


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2021 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   simple_dual_port_ram_fifo.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      EFX FIFO
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
//
// *******************************

module `IP_MODULE_NAME(efx_fifo_ram) #(
    parameter FAMILY        = "TRION",
    parameter MODE          = "STANDARD",
    parameter WR_DEPTH      = 512,
    parameter RD_DEPTH      = 512,
    parameter WDATA_WIDTH   = 8,
    parameter RDATA_WIDTH   = 8,
    parameter WADDR_WIDTH   = 9,
    parameter RADDR_WIDTH   = 9,
    parameter OUTPUT_REG    = 1,
    parameter RAM_MUX_RATIO = 4,
    parameter ENDIANESS 	= 0 //0: Big endian (default)   1: Little endian 
) (
    input  wire                     wclk,
    input  wire                     rclk,
    input  wire                     we,
    input  wire                     re,
    input  wire [(WDATA_WIDTH-1):0] wdata,
    input  wire [(WADDR_WIDTH-1):0] waddr,
    input  wire [(RADDR_WIDTH-1):0] raddr,
    output wire [(RDATA_WIDTH-1):0] rdata
);

localparam MEM_DEPTH         = (WR_DEPTH > RD_DEPTH) ? WR_DEPTH : RD_DEPTH;
localparam MEM_DATA_WIDTH    = (WDATA_WIDTH > RDATA_WIDTH) ? RDATA_WIDTH : WDATA_WIDTH;   
localparam LSB_WIDTH         = (WADDR_WIDTH > RADDR_WIDTH) ? (WADDR_WIDTH - RADDR_WIDTH) : (RADDR_WIDTH - WADDR_WIDTH);
localparam RDATA_WDATA_RATIO = (RDATA_WIDTH <= WDATA_WIDTH/32) ? "ONE_THIRTYTWO" :
                               (RDATA_WIDTH <= WDATA_WIDTH/16) ? "ONE_SIXTEENTH" :
                               (RDATA_WIDTH <= WDATA_WIDTH/8)  ? "ONE_EIGHTH"    :
                               (RDATA_WIDTH <= WDATA_WIDTH/4)  ? "ONE_FOURTH"    :
                               (RDATA_WIDTH <= WDATA_WIDTH/2)  ? "ONE_HALF"      :
                               (RDATA_WIDTH <= WDATA_WIDTH)    ? "ONE"           :
                               (RDATA_WIDTH <= WDATA_WIDTH*2)  ? "TWO_TIMES"     :
                               (RDATA_WIDTH <= WDATA_WIDTH*4)  ? "FOUR_TIMES"    :
                               (RDATA_WIDTH <= WDATA_WIDTH*4)  ? "EIGHT_TIMES"   :
                               (RDATA_WIDTH <= WDATA_WIDTH*4)  ? "SIXTEEN_TIMES" : "THIRTYTWO_TIMES";

reg [MEM_DATA_WIDTH-1:0] ram[MEM_DEPTH-1:0];
reg [RDATA_WIDTH-1:0]    r_rdata_1P;
reg [RDATA_WIDTH-1:0]    r_rdata_2P;

wire                     re_int;

generate
    if (FAMILY == "TRION") begin
        if (RDATA_WDATA_RATIO == "ONE") begin
            always @ (posedge wclk) begin
                if (we)
                    ram[waddr] <= wdata;
            end
    
            always @ (posedge rclk) begin
                if (re_int) begin
                    r_rdata_1P <= ram[raddr];
                end
                r_rdata_2P <= r_rdata_1P;
            end
        end
        
        else if (RDATA_WDATA_RATIO == "ONE_THIRTYTWO" || RDATA_WDATA_RATIO == "ONE_SIXTEENTH" || RDATA_WDATA_RATIO == "ONE_EIGHTH" || RDATA_WDATA_RATIO == "ONE_FOURTH"  || RDATA_WDATA_RATIO == "ONE_HALF" ) begin
            if (ENDIANESS == 0) begin 
            	integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            	always @ (posedge wclk) begin
                	for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = RAM_MUX_RATIO-1-i;
                    	if (we) begin
                            ram[{waddr,lsbaddr}] <= wdata[((WDATA_WIDTH/RAM_MUX_RATIO)*i) +: WDATA_WIDTH/RAM_MUX_RATIO];
                        end
                    end
                end
                always @ (posedge rclk) begin 
                	if (re_int) begin
                		r_rdata_1P <= ram[raddr];
                    end
                		r_rdata_2P <= r_rdata_1P;
                end
            end
            else begin //endianess == 1
            	integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            	always @ (posedge wclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = i;
                    	if (we) begin
                            ram[{waddr,lsbaddr}] <= wdata[((WDATA_WIDTH/RAM_MUX_RATIO)*i) +: WDATA_WIDTH/RAM_MUX_RATIO];
                        end
                    end
                end
                always @ (posedge rclk) begin 
                	if (re_int) begin
                		r_rdata_1P <= ram[raddr];
                	end
                		r_rdata_2P <= r_rdata_1P;
                end
            end
        end
        
        else if (RDATA_WDATA_RATIO == "TWO_TIMES" || RDATA_WDATA_RATIO == "FOUR_TIMES"  || RDATA_WDATA_RATIO == "EIGHT_TIMES"  || RDATA_WDATA_RATIO == "SIXTEEN_TIMES"  ||RDATA_WDATA_RATIO == "THIRTYTWO_TIMES" ) begin
            //integer i;
        	//reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
        	if (ENDIANESS == 0) begin
        		always @ (posedge wclk) begin
        			if (we)
        				ram[waddr] <= wdata;
        		end
        		integer i;
        		reg  [LSB_WIDTH-1 :0 ]   lsbaddr; 
        		always @ (posedge rclk) begin
        			for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = RAM_MUX_RATIO-1-i;
                    	if (re_int) begin
                    		r_rdata_1P[((RDATA_WIDTH/RAM_MUX_RATIO)*i) +: RDATA_WIDTH/RAM_MUX_RATIO] <= ram[{raddr,lsbaddr}];
                    	end
                        	r_rdata_2P <= r_rdata_1P;
                    end
                end 
            end
            else begin //endianess == 1
            	always @ (posedge wclk) begin
        			if (we)
        				ram[waddr] <= wdata;
        		end
        		integer i;
        		reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
        		always @ (posedge rclk) begin
        			for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = i;
                    	if (re_int) begin
                    		r_rdata_1P[((RDATA_WIDTH/RAM_MUX_RATIO)*i) +: RDATA_WIDTH/RAM_MUX_RATIO] <= ram[{raddr,lsbaddr}];
                    	end
                        	r_rdata_2P <= r_rdata_1P;
                    end
                end
            end
        end
        if (OUTPUT_REG) begin
            assign re_int = re;
            assign rdata  = r_rdata_2P;            
        end
        else begin
            assign re_int = re;
            assign rdata  = r_rdata_1P;
        end
    end
    else if (FAMILY == "TITANIUM") begin
        if (RDATA_WDATA_RATIO == "ONE") begin
            always @ (posedge wclk) begin
                if (we)
                    ram[waddr] <= wdata;
            end
    
            always @ (posedge rclk) begin
                if (re_int) begin
                    r_rdata_1P <= ram[raddr];
                    r_rdata_2P <= r_rdata_1P;
                end
            end
        end 
        else if (RDATA_WDATA_RATIO == "ONE_THIRTYTWO" || RDATA_WDATA_RATIO == "ONE_SIXTEENTH" || RDATA_WDATA_RATIO == "ONE_EIGHTH" || RDATA_WDATA_RATIO == "ONE_FOURTH"  || RDATA_WDATA_RATIO == "ONE_HALF" ) begin
            //integer i;
            //reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            if (ENDIANESS == 0) begin
            	integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            	always @ (posedge wclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = RAM_MUX_RATIO-1-i;
                    	if (we) begin
                            	ram[{waddr,lsbaddr}] <= wdata[((WDATA_WIDTH/RAM_MUX_RATIO)*i) +: WDATA_WIDTH/RAM_MUX_RATIO];
                        end
                    end
                 end
               	always @ (posedge rclk) begin 
               		if (re_int) begin
               			r_rdata_1P <= ram[raddr];
               			r_rdata_2P <= r_rdata_1P;
               		end
               	end
            end
            
            else begin //endianess == 1
            	integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
            	always @ (posedge wclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = i;
                    	if (we) begin
                            	ram[{waddr,lsbaddr}] <= wdata[((WDATA_WIDTH/RAM_MUX_RATIO)*i) +: WDATA_WIDTH/RAM_MUX_RATIO];
                        end
                    end
                 end
               	always @ (posedge rclk) begin 
               		if (re_int) begin
               			r_rdata_1P <= ram[raddr];
               			r_rdata_2P <= r_rdata_1P;
               		end
               	end
            end
        end
        else if (RDATA_WDATA_RATIO == "TWO_TIMES" || RDATA_WDATA_RATIO == "FOUR_TIMES"  || RDATA_WDATA_RATIO == "EIGHT_TIMES"  || RDATA_WDATA_RATIO == "SIXTEEN_TIMES"  || RDATA_WDATA_RATIO == "THIRTYTWO_TIMES" ) begin
        	//integer i;
            //reg  [LSB_WIDTH-1 :0 ]   lsbaddr;
        	if (ENDIANESS == 0) begin
        		always @ (posedge wclk) begin
        			if (we)
        				ram[waddr] <= wdata;
        		end
        		integer i;
            	reg  [LSB_WIDTH-1 :0 ]   lsbaddr;        
            	always @ (posedge rclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = RAM_MUX_RATIO-1-i;
                    	if (re_int) begin
                    		r_rdata_1P[((RDATA_WIDTH/RAM_MUX_RATIO)*i) +: RDATA_WIDTH/RAM_MUX_RATIO] <= ram[{raddr,lsbaddr}];
                    		r_rdata_2P                                                               <= r_rdata_1P;
                    	end
                    end
                end 
            end
            
            else begin //endianess ==1
        		always @ (posedge wclk) begin
        			if (we)
        				ram[waddr] <= wdata;
        		end
        		integer i;
        		reg  [LSB_WIDTH-1 :0 ]   lsbaddr;        
            	always @ (posedge rclk) begin
            		for (i=0; i<RAM_MUX_RATIO; i=i+1) begin
                    	lsbaddr = i;
                    	if (re_int) begin
                    		r_rdata_1P[((RDATA_WIDTH/RAM_MUX_RATIO)*i) +: RDATA_WIDTH/RAM_MUX_RATIO] <= ram[{raddr,lsbaddr}];
                    		r_rdata_2P                                                               <= r_rdata_1P;
                    	end
                    end
                end 
            end
        end
        if (MODE == "STANDARD") begin     
            if (OUTPUT_REG) begin
                reg re_r;
                always @ (posedge rclk) begin
                    re_r <= re;
                end
                assign re_int = re | re_r;        
                assign rdata  = r_rdata_2P;            
            end
            else begin
                assign re_int = re;
                assign rdata  = r_rdata_1P;
            end
        end
        else begin
            assign re_int = re;
            assign rdata  = r_rdata_1P;
        end        
    end
endgenerate

endmodule

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2021 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.
//
////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   gray2bin.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      Gray to Binary Encoding Convertor
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
// 1.0 Initial rev
//
// *******************************

`resetall
`timescale 1ns/1ps

module `IP_MODULE_NAME(efx_fifo_gray2bin)
#(parameter WIDTH=5)
(// outputs
 output wire [WIDTH-1:0] bin_o,
 // input
 input [WIDTH-1:0] gray_i);

//---------------------------------------------------------------------
// Recursive Module
// Description: reduction xor
generate
   if (WIDTH > 1) begin
      wire [1:0] bin_1;
      assign bin_1 = {gray_i[WIDTH-1], gray_i[WIDTH-1]^gray_i[WIDTH-2]};
      if (WIDTH == 2) begin
	 assign bin_o = bin_1;
      end
      else begin
	 assign bin_o[WIDTH-1] = bin_1[1];
	 `IP_MODULE_NAME(efx_fifo_gray2bin) #(.WIDTH(WIDTH-1)) u_gray2bin (.bin_o(bin_o[WIDTH-2:0]), .gray_i({bin_1[0], gray_i[WIDTH-3:0]}));
      end
   end
   else /* if (WIDTH == 1) */
     assign bin_o = gray_i;
endgenerate
   
endmodule 

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2020 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.
//
////////////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   pipe_reg.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      Parallel Pipelining Shift Register
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
// 1.0 Initial rev
//
// *******************************

module `IP_MODULE_NAME(efx_fifo_datasync) #(
    parameter STAGE = 32,
    parameter WIDTH = 4
) (
 input  wire             clk_i,
 input  wire [WIDTH-1:0] d_i,
 output wire [WIDTH-1:0] d_o
);

(* async_reg = "true" *) reg [WIDTH-1:0] pipe_reg [STAGE-1:0];
integer i;

always @(posedge clk_i) begin
  for (i=STAGE-1; i>0; i = i - 1) begin
    pipe_reg[i] <= pipe_reg[i-1];
  end
  pipe_reg[0] <= d_i;
end
assign d_o = pipe_reg[STAGE-1];
   

endmodule

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2020 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.
//
////////////////////////////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2021 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   simple_dual_port_ram_fifo.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      EFX FIFO
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
//
// *******************************

module `IP_MODULE_NAME(efx_fifo_ctl) # (
    parameter FAMILY             = "TRION",
    parameter SYNC_CLK           = 1,
    parameter SYNC_STAGE         = 2,
    parameter MODE               = "STANDARD",
    parameter WR_DEPTH           = 512,
    parameter WADDR_WIDTH        = 9,
    parameter RADDR_WIDTH        = 9,
    parameter ASYM_WIDTH_RATIO   = 4,
    parameter RAM_MUX_RATIO      = 1,
    parameter PIPELINE_REG       = 1,
    parameter ALMOST_FLAG        = 1,
    parameter PROGRAMMABLE_FULL  = "NONE",
    parameter PROG_FULL_ASSERT   = 0,
    parameter PROG_FULL_NEGATE   = 0,
    parameter PROGRAMMABLE_EMPTY = "NONE",
    parameter PROG_EMPTY_ASSERT  = 0,
    parameter PROG_EMPTY_NEGATE  = 0,
    parameter OUTPUT_REG         = 0,
    parameter HANDSHAKE_FLAG     = 1
)(
    input   wire                   wr_rst,
    input   wire                   rd_rst,
    input   wire                   wclk,
    input   wire                   rclk,
    input   wire                   we,
    input   wire                   re,
    output  wire                   wr_full,
    output  reg                    wr_ack,
    output  wire                   wr_almost_full,
    output  wire                   rd_empty,
    output  wire                   rd_almost_empty,
    output  wire                   wr_prog_full,
    output  wire                   rd_prog_empty,
    output  wire                   wr_en_int,
    output  wire                   rd_en_int,
    output  wire [WADDR_WIDTH-1:0] waddr,
    output  wire [RADDR_WIDTH-1:0] raddr,
    output  wire [WADDR_WIDTH:0]   wr_datacount,
    output  wire [RADDR_WIDTH:0]   rd_datacount,
    output  wire                   rd_vld,
    output  reg                    wr_overflow,
    output  reg                    rd_underflow
);

reg  [WADDR_WIDTH:0] waddr_cntr;
reg  [RADDR_WIDTH:0] raddr_cntr;
reg  [RADDR_WIDTH:0] raddr_cntr_r;
reg                  rd_valid;

wire [RADDR_WIDTH:0] raddr_cntr_w;
wire [WADDR_WIDTH:0] waddr_int;
wire [RADDR_WIDTH:0] raddr_int;
wire [RADDR_WIDTH:0] raddr_int_dcount;
wire [RADDR_WIDTH:0] raddr_dcount;
wire                 rd_empty_int;
wire [WADDR_WIDTH:0] wr_datacount_int;
wire [RADDR_WIDTH:0] rd_datacount_int;

assign waddr     = waddr_cntr[WADDR_WIDTH-1:0];
assign raddr     = raddr_cntr[RADDR_WIDTH-1:0];
assign wr_en_int = we & ~wr_full;

generate
    if (MODE == "FWFT") begin    
        reg init_set;
        reg rd_empty_fwft;
        assign rd_en_int     = (~rd_empty_int & rd_empty) | (re & ~rd_empty_int);
        assign rd_empty      = rd_empty_fwft;
        assign raddr_cntr_w  = ~rd_empty ? raddr_cntr_r/*raddr_cntr-1*/ : raddr_cntr;
        
        if (ASYM_WIDTH_RATIO < 4) begin
            assign wr_datacount  = wr_datacount_int;
            assign rd_datacount  = rd_empty ? rd_datacount_int : ~init_set ? (rd_datacount_int+1'b1) : rd_datacount_int;
        end
        else begin
            assign wr_datacount  = wr_datacount_int;
            assign rd_datacount  = rd_datacount_int;        
        end
        
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                init_set <= 1'b1;
            end
            else if (~init_set & rd_empty) begin
                init_set <= 1'b1;            
            end
            else if (~rd_empty_int) begin
                init_set <= 1'b0;            
            end
            else if (rd_empty) begin
                init_set <= 1'b1;            
            end
        end
        
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                rd_empty_fwft <= 1'b1;
            end
            else if (rd_en_int) begin
                rd_empty_fwft <= 1'b0;            
            end
            else if (re) begin
                rd_empty_fwft <= 1'b1;            
            end
        end          
        
        if (FAMILY == "TRION") begin
            if (OUTPUT_REG) begin
                always @ (posedge rclk or posedge rd_rst) begin
                    if (rd_rst) begin
                        rd_valid <= 1'b0;
                    end
                    else begin
                        rd_valid <= ~rd_empty;
                    end
                end
                assign rd_vld = rd_valid;                
            end    
            else begin
                assign rd_vld = ~rd_empty;                
            end
        end
        else begin
            assign rd_vld = ~rd_empty;
        end
    end
    else begin
        assign rd_en_int     = re & ~rd_empty_int;
        assign rd_empty      = rd_empty_int;
        assign raddr_cntr_w  = raddr_cntr;
        assign wr_datacount  = wr_datacount_int;
        assign rd_datacount  = rd_datacount_int;
        
        if (OUTPUT_REG) begin
            reg rd_valid_r;
            always @ (posedge rclk or posedge rd_rst) begin
                if (rd_rst) begin
                    rd_valid_r <= 'h0;
                    rd_valid   <= 'h0;
                end
                else begin
                    {rd_valid,rd_valid_r} <= {rd_valid_r,rd_en_int};
                end
            end
            assign rd_vld = rd_valid;            
        end
        else begin
            always @ (posedge rclk or posedge rd_rst) begin
                if (rd_rst) begin
                    rd_valid  <= 'h0;
                end
                else begin
                    rd_valid <= rd_en_int;
                end
            end
            assign rd_vld = rd_valid;
        end
    end
    
    if (ALMOST_FLAG) begin
        assign wr_almost_full   = wr_datacount_int >= WR_DEPTH-1;
        assign rd_almost_empty  = rd_datacount_int <= 'd1;  
    end
    else begin
        assign wr_almost_full   = 1'b0;
        assign rd_almost_empty  = 1'b0;        
    end
    
    if (PROGRAMMABLE_FULL == "STATIC_SINGLE") begin
        reg    wr_prog_full_int;
        assign wr_prog_full  = wr_datacount >= PROG_FULL_ASSERT;
        
        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_prog_full_int  <= 1'b0;
            end
            else begin
                wr_prog_full_int  <= wr_prog_full;
            end
        end  
    end
    else if (PROGRAMMABLE_FULL == "STATIC_DUAL") begin
        reg    wr_prog_full_int;
        assign wr_prog_full  = wr_prog_full_int ? wr_datacount >= PROG_FULL_NEGATE : wr_datacount >= PROG_FULL_ASSERT;   

        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_prog_full_int  <= 1'b0;
            end
            else begin
                wr_prog_full_int  <= wr_prog_full;
            end
        end              
    end
    else begin
        assign wr_prog_full  = 1'b0; 
    end
        
    if (PROGRAMMABLE_EMPTY == "STATIC_SINGLE") begin
        reg    rd_prog_empty_int;
        assign rd_prog_empty  = rd_datacount <= PROG_EMPTY_ASSERT;
            
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                rd_prog_empty_int <= 1'b1;
            end
            else begin
                rd_prog_empty_int <= rd_prog_empty;
            end
        end
    end
    else if (PROGRAMMABLE_EMPTY == "STATIC_DUAL") begin
        reg    rd_prog_empty_int;
        assign rd_prog_empty = rd_prog_empty_int ? (rd_datacount <= PROG_EMPTY_NEGATE) : (rd_datacount <= PROG_EMPTY_ASSERT);
            
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                rd_prog_empty_int <= 1'b1;
            end
            else begin
                rd_prog_empty_int <= rd_prog_empty;
            end
        end  
    end
    else begin
        assign rd_prog_empty  = 1'b0; 
    end
    
    if (HANDSHAKE_FLAG) begin
    
        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_ack <= 1'b0;
            end
            else begin
                wr_ack <= wr_en_int & ~wr_overflow;
            end
        end

        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                wr_overflow <= 1'b0;
            end
            else if (we && wr_full) begin
                wr_overflow <= 1'b1;
            end
            else begin
                wr_overflow <= 1'b0;            
            end
        end
        
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                rd_underflow <= 1'b0;
            end
            else if (re && rd_empty) begin
                rd_underflow <= 1'b1;
            end
            else begin
                rd_underflow <= 1'b0;            
            end
        end
    end
    
    localparam RATIO_WIDTH = (RADDR_WIDTH >= WADDR_WIDTH)? RADDR_WIDTH - WADDR_WIDTH : WADDR_WIDTH - RADDR_WIDTH;
    
    if (ASYM_WIDTH_RATIO < 4) begin
        assign wr_full          = (waddr_cntr[WADDR_WIDTH]^raddr_int[RADDR_WIDTH]) & (waddr_cntr[WADDR_WIDTH-1:0] == raddr_int[RADDR_WIDTH-1:RATIO_WIDTH]);
        assign rd_empty_int     = waddr_int[WADDR_WIDTH:0] == raddr_cntr[RADDR_WIDTH:RATIO_WIDTH];
        assign wr_datacount_int = waddr_cntr - (raddr_int/RAM_MUX_RATIO);
        assign rd_datacount_int = (waddr_int*RAM_MUX_RATIO)-raddr_cntr;
    end
    else begin
        assign wr_full          = (waddr_cntr[WADDR_WIDTH]^raddr_int[RADDR_WIDTH]) & (waddr_cntr[WADDR_WIDTH-1:RATIO_WIDTH] == raddr_int[RADDR_WIDTH-1:0]);
        assign rd_empty_int     = (waddr_int- raddr_cntr*RAM_MUX_RATIO) < RAM_MUX_RATIO;
        assign wr_datacount_int = waddr_cntr - (raddr_int*RAM_MUX_RATIO);
        assign rd_datacount_int = (waddr_int/RAM_MUX_RATIO)-raddr_cntr_w;
    end
endgenerate

always @ (posedge wclk or posedge wr_rst) begin
    if (wr_rst) begin
        waddr_cntr <= 'h0;
    end
    else if (wr_en_int) begin
        waddr_cntr <= waddr_cntr + 1'b1;
    end
end

always @ (posedge rclk or posedge rd_rst) begin
    if (rd_rst) begin
        raddr_cntr   <= 'h0;
        raddr_cntr_r <= 'h0;
    end
    else if (rd_en_int) begin
        raddr_cntr   <= raddr_cntr + 1'b1;
        raddr_cntr_r <= raddr_cntr;
    end
end

generate
    if (SYNC_CLK) begin
        assign waddr_int        = waddr_cntr;
        assign raddr_int        = raddr_cntr_w;
    end
    else begin
        reg  [RADDR_WIDTH:0] raddr_cntr_gry_r;
        reg  [WADDR_WIDTH:0] waddr_cntr_gry_r;
        
        wire [RADDR_WIDTH:0] raddr_cntr_gry;
        wire [RADDR_WIDTH:0] raddr_cntr_gry_sync;
        wire [RADDR_WIDTH:0] raddr_cntr_sync_g2b;
        wire [WADDR_WIDTH:0] waddr_cntr_gry;
        wire [WADDR_WIDTH:0] waddr_cntr_gry_sync;
        wire [WADDR_WIDTH:0] waddr_cntr_sync_g2b;

        if (PIPELINE_REG) begin
            reg  [RADDR_WIDTH:0] raddr_cntr_sync_g2b_r;    
            reg  [WADDR_WIDTH:0] waddr_cntr_sync_g2b_r;        
        
            assign waddr_int        = waddr_cntr_sync_g2b_r;
            assign raddr_int        = raddr_cntr_sync_g2b_r;
            
            always @ (posedge wclk or posedge wr_rst) begin
                if (wr_rst) begin
                    raddr_cntr_sync_g2b_r <= 'h0;
                end
                else begin
                    raddr_cntr_sync_g2b_r <= raddr_cntr_sync_g2b;
                end
            end
            
            always @ (posedge rclk or posedge rd_rst) begin
                if (rd_rst) begin
                    waddr_cntr_sync_g2b_r <= 'h0;
                end
                else begin
                    waddr_cntr_sync_g2b_r <= waddr_cntr_sync_g2b;
                end
            end
        end
        else begin
            assign waddr_int        = waddr_cntr_sync_g2b;
            assign raddr_int        = raddr_cntr_sync_g2b;        
        end
      
        always @ (posedge rclk or posedge rd_rst) begin
            if (rd_rst) begin
                raddr_cntr_gry_r <= 'h0;
            end
            else begin
                raddr_cntr_gry_r <= raddr_cntr_gry;
            end
        end
        `IP_MODULE_NAME(efx_fifo_bin2gray) # (.WIDTH(RADDR_WIDTH+1)                     ) xrd2wr_bin2gray    (.bin_i(raddr_cntr_w), .gray_o(raddr_cntr_gry));
        `IP_MODULE_NAME(efx_fifo_datasync) # (.STAGE(SYNC_STAGE), .WIDTH (RADDR_WIDTH+1)) xrd2wr_addr_sync   (.clk_i(wclk), .d_i(raddr_cntr_gry_r), .d_o(raddr_cntr_gry_sync));
        `IP_MODULE_NAME(efx_fifo_gray2bin) # (.WIDTH(RADDR_WIDTH+1)                     ) xrd2wr_gray2bin    (.gray_i(raddr_cntr_gry_sync), .bin_o(raddr_cntr_sync_g2b));
        
        always @ (posedge wclk or posedge wr_rst) begin
            if (wr_rst) begin
                waddr_cntr_gry_r <= 'h0;
            end
            else begin
                waddr_cntr_gry_r <= waddr_cntr_gry;
            end
        end        
        `IP_MODULE_NAME(efx_fifo_bin2gray) # (.WIDTH(WADDR_WIDTH+1)                     ) wr2rd_bin2gray  (.bin_i(waddr_cntr), .gray_o(waddr_cntr_gry));
        `IP_MODULE_NAME(efx_fifo_datasync) # (.STAGE(SYNC_STAGE), .WIDTH (WADDR_WIDTH+1)) wr2rd_addr_sync (.clk_i(rclk), .d_i(waddr_cntr_gry_r), .d_o(waddr_cntr_gry_sync));
        `IP_MODULE_NAME(efx_fifo_gray2bin) # (.WIDTH(WADDR_WIDTH+1)                     ) wr2rd_gray2bin  (.gray_i(waddr_cntr_gry_sync), .bin_o(waddr_cntr_sync_g2b));        

    end
endgenerate
endmodule


////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   bin2gray.v
//       / / .'     /    
//    __/ /.'      /     Description:
//   __   \       /      Binary to Gray Encoding Convertor
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
// 1.0 Initial rev
//
// *******************************

`resetall
`timescale 1ns/1ps

module `IP_MODULE_NAME(efx_fifo_bin2gray)
#(parameter WIDTH=5)
(// outputs
 output wire [WIDTH-1:0] gray_o,
 // input
 input [WIDTH-1:0] bin_i
 );

//---------------------------------------------------------------------
// Function :   bit_xor
// Description: reduction xor
function bit_xor (
  input [31:0] nex_bit,
  input [31:0] curr_bit,
  input [WIDTH-1:0] xor_in);
  begin : fn_bit_xor
    bit_xor = xor_in[nex_bit] ^ xor_in[curr_bit];
  end
endfunction

// Convert Binary to Gray, bit by bit
generate 
begin
  genvar bit_idx;
  for(bit_idx=0; bit_idx<WIDTH-1; bit_idx=bit_idx+1) begin : gBinBits
    assign gray_o[bit_idx] = bit_xor(bit_idx+1, bit_idx, bin_i);
  end
  assign   gray_o[WIDTH-1] = bin_i[WIDTH-1];
end
endgenerate

endmodule 

////////////////////////////////////////////////////////////////////////////////
// Copyright (C) 2013-2020 Efinix Inc. All rights reserved.              
//
// This   document  contains  proprietary information  which   is        
// protected by  copyright. All rights  are reserved.  This notice       
// refers to original work by Efinix, Inc. which may be derivitive       
// of other work distributed under license of the authors.  In the       
// case of derivative work, nothing in this notice overrides the         
// original author's license agreement.  Where applicable, the           
// original license agreement is included in it's original               
// unmodified form immediately below this header.                        
//
// WARRANTY DISCLAIMER.                                                  
//     THE  DESIGN, CODE, OR INFORMATION ARE PROVIDED “AS IS” AND        
//     EFINIX MAKES NO WARRANTIES, EXPRESS OR IMPLIED WITH               
//     RESPECT THERETO, AND EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTIES,  
//     INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF          
//     MERCHANTABILITY, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR    
//     PURPOSE.  SOME STATES DO NOT ALLOW EXCLUSIONS OF AN IMPLIED       
//     WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO LICENSEE.           
//
// LIMITATION OF LIABILITY.                                              
//     NOTWITHSTANDING ANYTHING TO THE CONTRARY, EXCEPT FOR BODILY       
//     INJURY, EFINIX SHALL NOT BE LIABLE WITH RESPECT TO ANY SUBJECT    
//     MATTER OF THIS AGREEMENT UNDER TORT, CONTRACT, STRICT LIABILITY   
//     OR ANY OTHER LEGAL OR EQUITABLE THEORY (I) FOR ANY INDIRECT,      
//     SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES OF ANY    
//     CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF      
//     GOODWILL, DATA OR PROFIT, WORK STOPPAGE, OR COMPUTER FAILURE OR   
//     MALFUNCTION, OR IN ANY EVENT (II) FOR ANY AMOUNT IN EXCESS, IN    
//     THE AGGREGATE, OF THE FEE PAID BY LICENSEE TO EFINIX HEREUNDER    
//     (OR, IF THE FEE HAS BEEN WAIVED, $100), EVEN IF EFINIX SHALL HAVE 
//     BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO 
//     NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR            
//     CONSEQUENTIAL DAMAGES, SO THIS LIMITATION AND EXCLUSION MAY NOT   
//     APPLY TO LICENSEE.
//
////////////////////////////////////////////////////////////////////////////////


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
JbdHN/pTscR4jM1IQ9Cg8PPt/JuiP63WQyGSWWjrQ+z1BfHXGY2pbHdA9RJzlkwq
n3jM9ns+on9PnSfGfaLzPSMBsqL7I+pIDUPkq3lp33psHxbHgAg/iaCLNqtyiKx5
5mvBl4lNuAEZuVAge/mjBbRO+bQk5BmeByRIYihz+bntvvnFINckIb/qkq+3mIyw
lxJjmjiBxwTRNm9AeIMuKXT6FgoMD9rbG6Vw0lnkB3lBVRWHXyKz6U8gZnAepznH
EMoVGJk5WQk+Qhur+TBwIcYg6OEn9CC5EkvzJBx+b5Ll972czXolcD+e2uqca+Xk
6vBM1vW9vOnx5iHml7XEPg==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 5328 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
aLa4rA6X845C0Taagl3+n32emY8wIVB1GfAhVwoRQybHF5zCqGh03H12wjD5rnRb
eg2DhZ9O0HPKS4qE/DpHwEmMUwg3sfC9mrNS0Zf/kMgBryHNy+7YP7c9CrttrI2E
fjcQE7QSW5wIVqg7mNKz9hJAQ1MNMg3XBqjrthRlHocFvjbxeYVc3bzFbKoC9awO
Mtq8ciXs/R1m87VilTq/DJM/VcsNSniN1KGbvQ0eq0XCpG81/0rO+QkcmtUCgPIb
uFeUz8eu4oKqrCWnw3snZUeCWSON0m1fC9h0AB4Wh3S4jZUkLXGngxDX7DxfjoaQ
15zMdCarjWdQtLh0P3UL/Q==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 3760 )
`pragma protect data_block
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
p4r+xYkpG2B9YZqxVfbmWg==
`pragma protect end_protected

//pragma protect end


`timescale 1ns/10ps
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
UUjkEQgtkzB1gaQ1H5l7Kgezv2sP3R9E1H+6Rsh5/MNx7M3YHlpyKsD/s761ZIxU
+Da+mUNcs3+qd4f3Y6NAuE8beiQFwm17UgqyTeOFLK8hTcSQorgLfdzRxwE69lCl
zBBG/rlCgZfhoR7inq0yl5OVO3LKXclIjPQbtBYMwjsrcS2VSQGJ1dXZSoAQEZvs
H1SCwFoQjnaLev/fHAWQw5CgXa92zCm4+JReqAwk8OJg3fM6pjdra9KaaHfFHMkV
bJtKaZJ1gLyEbdxT4EFngYfgp4pbYiWDMKdLJIkG0MBP1SoTBPctPokTHTDhHXoH
bwBmxEA9HloS/cicC7lEeg==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 1168 )
`pragma protect data_block
aJ3tfcpvVRFlhvw3itaQTvMLvtUnDUbt0PRjNprQ3qBGY5el/53R3k5FX+rHWSub
Ctb85MYaqEewr+9rmIC9QULNGXMVzvir/fus6st4kCfKkdC0p7h31ry0xqC808Dd
dY0iyfNwFDzqfbUEgi5mRqP8+N65nOG0qNpFr+k1VFg1qVYYOeB5JO90Y6Q0MLQq
yLqAZyhtHFKEvS/5YAcYIFlsHZ4K1grt5SFSELPdAcEDJdRKOWPY8WtJa/KnO3Il
1FTdqHjbnHMhw2aqEaf4aAtui0cH3HbAbu+fOOEtOH9T7G8wLysxsEMFq4uQpEjX
kiiVOxTarbtTadiXCfPhPnOLUKjjRlq5FU9A148QMOUWG4FNWpq++17OBZsiIYD7
fj/KuoTuIt4a0MdwjvhAm5vpgKVF3BDPgkSx4F6OBZUhhPlhAQBwYs3CTDaPpX/9
N2VcodW5DFIjdIuhZsOyrMQp+kKk4KcWj72r1DfaZLrOMMooVtPYGWd9WYYToqKD
gzzKt/bgt6D3PiXP5a06v3DU8VReyRhUWj7ydLA+AJ0Dzzx4zfAdD8J4on2L+u++
IX1CbqmkzIWgU5osTcU2CAY+IjmQyRpq//ShxndtTUB3lUBvthRdRzJsx5yRaibb
jOi71uhKX2duB4PW2G3WpFYt+oiObFPtQelUAJIGPHbIMhg5IG97RnP00CH8PaNV
o9CVZI7P9e1UgF38UIoPEOctacCCMPURj/wC5aX56Ub12SFspYS0n7uw/v4lpe03
hjItll8HmRmxFu/5Ub9pjgX78kKnGo0Jnw28P2CDM7X0miPJ9qDP48gf1iN1Zz3+
7lFLdEdlfAzQhlUZ3xXzf5DFcQX6EARCV7zR5bMWi+SPAeJDLqXmRMfibrHdWVnf
vtUz223KxiFUAw8LBF2OuQxDgCmNC0ea7DIK4vrPGVSKCy62roUAroHJJ0/vxYCC
N4MjtbUxdDPHKhbiaZXFmzXAzFkEJm71+6m8J7l9SWEsgKeSye2g+FRwRsrB0OjD
ScQ/EE5ABEA8x3TXuynmsVigeAfu2T0o5Ym/sYcWypjQtAhuvuInsUnVfrYCmLB5
criZRRWFmHO2FvtgaFryUtltXrK7m53acsK0el9654rpcfNf8+nSmHGV7wvGp00n
6VIBH7JBik/HqOTMgJE3yE0qn5eL6K+aIoUUh4JDXiB6/LD199MUsudgvoPf8iNC
0jeIRoHEDQkNYm5hODO7ARS2+KpYMK0Vqu3ZFTs5ZWDjtr13dKv6/F2seLP2QTIz
zNerOgmfbK7CFQRwy0L6+zQey3HkJJqq5nGsgbLPIxEyHdiS+7x2+tdo+i8fpP7y
I76HPoqTrx75+gB/UoUKTelegTRPrSEWpPBhtIW48LTlTgZbqNXYTSn69IVOjHx1
wOxZ5jpropRpWy7VvtiN1dnsRH7SQH24vMyul4tgxk56zHbR0XRhi+iGxrQrNTO7
tvXGp8yEYPRpx7GLOXBwbm1BQ6QyFTqH5VJJhWxjQ/00eEkGVZGguN/nHrj9sSqq
cUlGjWnX23Y217mbFX1ByA==
`pragma protect end_protected

//pragma protect end


`timescale 1ns/10ps
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
Zinuk7jbxW7PxksjKf19m+IW2AUhMsFWJQFzZPGFysNcagi2Fy+ZWsef1eu0gJcX
2qiQCsimA4/sfUirTGaqHpGZbVibBSA3yaGj6zuFMtgy8KpiKZ9DsTzmSODM4W6Z
R8RxinzEsbZGL1IbrNbzPYt9gdxoqc3mm2AsWtcShijba5aRoJ2lfedWfY1kqL71
7uz1L/Lg0BovSBgJcycK+2vKpNbE1K/e8Imbh7TaMeFFLkb62DlW7nNJCrIh3aj8
yODGTlgMGXI1yihi/Drtl2vKGtOHJ6JhcoNx33pOzRZ/TLWASWKBHvDf0/VLVfez
Uvs/qtnfrMewZ8b59lZuqw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 8288 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


`timescale 1ns/10ps
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
gEYxvz6pSaHDXvRuBKHY5gXyFNj2UXWXs0wdOB/TFPVpA67KgWNsJ/soxaiWmaOB
1lcFOF/OdWJgV8DVdhBLsjbSoOFE+RgmRHvmdHFve60i+zhIQd6lFH6aBATTWkV4
lYfWX0BmeACwR5rUyip5EkByZ+rr937qI8lwzQxGbU5Vtpg2oZbRZV4w5boUPshT
yoRLra0XP5XE2PTI8ucGU10R2FI5tAgHyMfDBWXqZ6kc8UegiQrbwcr8tcT7F5TO
A5HNS2CjmY63KCTH/4L/N1BLMxG/KrHn4zEVb9Gey2QX0k4+xHZDDbE/PQ9E4iuG
AELfXWVmI/N6bARcNQeMIw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 1696 )
`pragma protect data_block
GzM8kegJOwxQ462HbIIvWgLFXktPYn3/yEeavSHHDuMmJtVmCxBGX6LAveLerz9y
CxAYRrd5XdAPFJ6mQnfZ6WI9eHmZzFS4rjvYdArCH9GXYT9bIj7b9BoKC2fa/Hho
/bO+B3YDruXSagTIHHAAUJhQt2yHdwOfA/SL51INoKpRg2jS26nEHS8IWDmcjQmf
wtjTD0l4wNz+y/pNrxvscW7zNe4c4J2mfOtF/QXnIad/r9Dtb1CFOJP4/UTs92u8
XJAthTNuOLsbfiHq4RC+qKNyXAXj9eUtCHHppw4cCvxkg0pn9EerT2SwntIr6Q0j
dX7UUVmfXrlO7X5WUr7wEUdpL9jOlG+3Q8uIfrRS06XmKTe7uTzAojjWFNFjIue4
a3U+UYXBlBCUWtpZaDSAkxO0rXH+L0qXUSynktBkiSeskXFtLGxOn45/TlZrP8W7
I0znEN2oxxaLVO519U+3Ur3Sjw0TCzLjsFLSHb00yhf4U7LBOWGzsvHg7cluaGYY
brR0fWRz+elSH3buppb3q67lUgG9BHyEJQrvHEBo3VYP4thZMterPGlkHTtPLymM
Ej51WsmyVLRq5vKWyQ8nwnIC3ARoJwLGc+g94XzUYmbqw+JwYw+UKikHI3zpk2XB
c0+Dd0wlmVR2DiycJwit8c47uDVwdzOuRho5hbf9j7Bf6U2P8FzbXKy+Vi+FO2Uq
t8j7x4D5dH1QhCH9sDIv/AaV534v6LCitGlY+ZDXwdL5ywkdWhLxo/CCQ+6SytHH
O7+yN/qu+4zTUNLkjISYJ0obIYhvcurBRnpUU0QtL1CgBo1Xl3oT9He4wAKZvr3G
4DQAh6RWwsEZ17KtxkxflOtWy1pfyIZRPjgJhK28nLfzl9y8tHTLd2kZ51Pt3mnG
K7CR5SRMFw9ItNVgka0rGx2phqxxXviFnpzA8fToPAjxAhwsOYUMRgRXcl97J5ku
1gnZt6p8xrgc2OImnt2SvRD2yh/InjlZ5sIt0frg3LrAY6Kr6G3Ck0u3zdA6ONAF
mooM3w1wCOEgYuWcU1JyPhHNap1IXLrPrc0SRsggb2HCjVqEQU9huGhKHXvDFGMf
Vezg+BYkOhzaFxhRcL7brNq5c847HDwX2Xh8wJ7BO0iso/UgfbYVq6i1s+MpU6VN
4hgZJv6XQPZ1jqwIPBFzWfrUIdzcFVdx9i4FllUtYzjovpcbn2w7B0GAa1yldp1j
GTHZmPKehecchIc3kBmWcTWSc+kVtaLg3rIxJ35e4z4S3zr9oUeJMupw+K3JfSMB
9F6avLbmdzQCr7DRzb1n/wtNRXLlTuKaGYduNecx3j4Qs6Ym747jSvYWKV7Vfp9M
+73QsbEfCSPQjlJlPBN/rmrmez5Da6qfiw8xnJUTd1PadW64BDRKt5L0KmzqDEzV
aza1ikcmZ7gADZ7YB1gloKHMVY7q4cDJJ0/NT8gladNdmESnmu+tk4g7/yPVkt+w
pgxT5CIVI8gig9dJwEsidvt6TbH/pw27GZjMf73+4by/3HQ/UZmSSAdGwaqZLboa
xnA9N9FL6HihcI9gHz5asCDfgDh8ldUUx2HLauCIgT0/zcm8gnveoeOiJh0WJ5xd
qzh3bwV9u7d++AB9RQVrbg/OotfltkExWEpA2e/09eyOFVEA2lXYrF+iybwQrqYh
AyvrCm+S0RvSN4weRyTEELjBXt1S0NzkNLlt5HnAGXxwqjXeLvkDz+7bvaXSeXvM
5ab//QZkW2ysMXrrU0oz9v26fvAoiqLzVeuJiiOM38uwtEF5hUDQWJxvhqgrWPdk
Uef216QpFhG9CEE0awV3lyiyqHubLogSlCoDGq0KCCRDCbWkXbrhG3jfVIra5hl9
5WMg5tgCsQScQY4ZzWTxT52RhvdU/3AxQNjSqIH1lK/ZsKtRprU9jE50QOvsIxH2
2apkKee7/5ftWVhm9Mlx7lbJmDj/BnebZLKUDknhc0hTh5fepBDYxBZy86dMlI/k
lfkEWD/x5yWOQHB/m+ksFg7bcLe02wIAo/2w6n+cBgayS86wUxVuMO+/QVrgBstk
KmrQbuFKvTOlvDD+H7PNRys0icJ+gviutIp3WIJPqDV+jECl67XbzE/VdJxAY5pP
XQT6zcy2WC1eb+EufLatdajJAQL0YZz4l3ocJE6vnhdjVqHu6azjhGpHwPt4Yww+
NItNp5Kckfh64rEI5uhGO56XX4/POmw0f8MeXsjxsPJrkHMnFXfiyaBrC1STaXCa
3TANB989Ne5C7YEmzdtsQQ==
`pragma protect end_protected

//pragma protect end


`timescale 1ns/10ps
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
TaySuFFjakkexaOvjfg1PZ2zv+ySxPiJBWtNAM25VMob9vdZFaiSVZcPLXCLSqoU
vnutsbwsb5fss7UbL0hQvSmWoIMFsghX6a0IQdDZnhhVh2/7rlK5BkkWyxvYUXn/
4wmKTlgpEi9R4rl6Rk5iE/urscsAKxQXV4dBlsxU5exR48rgmnC5YGbnhlCtsg4I
EyeHW347kcaH8HPYcmZyeQ63x/r0RI3tnMNCI2alAT8Q62CXCSxvm8ys2ykA4NgO
s8A88MKiwsblZArfloIEoauw1sXICoOWhhqwUD7BopSXDrjMslbjQUO/CKzzCfzB
0lZDwJsfuRZtFNaKhCutsw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 1984 )
`pragma protect data_block
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
n2rNn2EGsRp9sEk5ty//mg==
`pragma protect end_protected

//pragma protect end


`timescale 1 ns / 1 ns
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
DeTa21c1hS70lMf3ECSiuLZZmfOImcVHui1sJauuXbpB2boqK4tTIpbpriL2V5fP
RNMtsQfDlFSCq2duhGdmnx6UnG8398NFP1ihGGkz5VL8enrN5rRxg827qxCreqRD
7UwtaPDXav09iWS8y1UXUKMi4B7qiHCoXeTVknCVwrK2auJuUm9D5LD91HEKPHqM
ni4GtXVh9FtaXlUvwVPKOAkeGXQ1glmR/H/5a/30WbXuDDbKuU1jxarG7YVC8E+y
6FmWJ4U2rM4Wi1U6dCcRE0MCjUyMl/IbMJJ0Sl9RLKpwuVKWsUm+AqM1iQwSMekP
DAPsKulZTIOhbx1cXGa1Kg==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 2592 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


`timescale 1 ns / 1 ns
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
SW2IaPvLt6m/Xaljl8jm6+2N6RDUTGrbhfUOc4CGC5iXjRpXhP0+98wPSgKZnEvX
y/UEsJF0WWCT1EbhBfBIJsiofXPIkhpzgzX5woo1yIif5c9uWjhsEKuQG3qUdrj7
qIeX6zsR9H3t3cS06jzbZ+OqIj3YPyzqFXaSgxoR1IVk4NsXwABz0rNmKan+HvIN
7DQrqZuSx+Jq4pGz+HfY5kTl/evAGaolo8NHe+CBKYHY9sHhyNodNxeHq11s9PVL
y8/8PdqfW/h6+kiDFk02ynwwmq+YxsSEXmPa9VJAc0rQLxz4LN4Zx6SashQX9ANT
kihIuKTO0Sact7otEZgfRg==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 16240 )
`pragma protect data_block
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
iTSCbVLyHUBTofsX/MmXEw==
`pragma protect end_protected

//pragma protect end


`timescale 1 ns / 1 ns
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
U1qEJd5YoAYwfVA760PxINcJu4ZXj+MNNBi0AcWTV88DbuS5sY/9LGEFCCPRMdhI
y/Vdlcpfa7HsvVAqFHnqb2mN2eALWRPpO5+gP7k5D0yjKz4ToKHmld70TW3ravkZ
zRYjn30uxjFv3+cTJbmq8ZRcHMJ/m/IAWIyzEPOA5mIYA4ewqPWgwBfK2Cr+D0NU
AByIBm+lTmjBZ7xSf9ZSSEfG0BujoPcyFMzAIwLRGJjv977NAJj5hBly+cWAUK6d
yuPk0gMTZKMpJExUym4ZBgy/UQqbtpQVCSYwspooDHBv9y8gNDtDDwb5wKlkMzS1
D7S+iJsoZhoNJDZbSdEnHQ==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 10064 )
`pragma protect data_block
/dso6FgOFM5VgnQ5AnkCLCejVNs5tkW/LvfoSBtP9ko1EEKqwVT/Er5HxQy+uJg2
+lIDngiPKk5kFCus8MQfj6uZPf+IjEeTBgPcd/d1Ubdj01R2iFYVx0bVSv/Bgjok
4zJUXVgnVhg+sA+cWxEHxcu+KAeaX0+i03WN0UlJVASQfJFvOGG+o8z2KBCtlBTB
Mpb9m6G3l9ODzs731w3ulc8OAwv9EOPP1gRJ0KQUcLiUcXtyFiYVNt+vHSJYQw3E
9jlEwPYU5C+AiE3F3avVcUAp+8thxI7cGhl0sgs7xvIiISTdy4jM9pPTxOZ62QMP
mpfOYpnumtsFZYEYksNN2yVQo8wylxMnn2Y71v0VhrBRa48rdhl3gcnm1aZlvDSJ
mviHFTIgPf9dYHbZYfIqO+/Hj/LrGsSy96gHt5lwZ4cSJID7Gu1tLUimDCbuCWTj
Zo67VG76GsaG32OqamF2Ldn9kPw/4CcX/zOOdb82SnDIsQPhhzDUj1T5gfOj4JTX
hEEbvkPGsIqKbiMOEpISoZdUNg5IhxiCdYhU/Q0Ql4b3eDXUPmg2EL8G+oC41ZZH
RvVgMUQey4lCYERaKt8juLkbTEl6X9BRMmcJnLsaNliTezBhbwnU3y4GMBazulJi
SqSfBrlbFNCr2ca9UAjrhZmLgHQGGsxwNCUSMIS/zU4ooAuR+IMS8O1Vtm8xWcmL
xxP1/RlauVk7ZeN3O2OKgECDSXmIEPoBFvLKALx/plhKqZozAlPri1iKrlTW8VDv
ilcZ2nhECJdK1//TuKASFNhYBMuiRcPi48n/zZsY0t1pCSyInuVTwnCsetATYf5M
PlRorf6104Tt8ejipNTYAPesHdWI1fBrJ+FQTpRm3vMfK/gZXrbtSDyB1PAfHuLC
dT5tgoL6sMUaDxqggvqE1Nt4rKHVjQ2gk+edAT/aYlUAXypHrRYmxr7ZtIBk8TiX
Rl1pQBk3SwA3RIEqJ5slucR3BLn0SPzYLjH014AEZ+8m4+oOe9N1DWPsb43xfh4T
qP4A8l4rDe6MchNi/Qf9BDH8m0VXTdXEDDMYdH+mR+srMas7K5YMwxLk/w/znRhR
OOlJwXFyc3rYmkvTuQpqfAuJoQQabOmLMffEEyqud9cmlIuueha9AbYAwCAgxzt5
zNJHYGTTFp88tpQps+on5Iaw1WNMsfcBWfomBHdnpRc9ukNABgNi6rQ4ttvBgAfM
uPmcZ+fhK14qtZoYC2SpZDuUttED1+Gunb5seyfmcXd1TsX646DvhVxdFLFIoNvI
kL/Z6u6VVd0q4XgY/VUe++xuAGFKJJIGTTW3kLKYQ763Pqvh94JoclcSPFIKdnXi
YI1Rbui2WBH10A6VlLqhjEcVdpLDE1vw8J2a3n9ODyEoZJKgF9eH6wJgvE+aalp1
Kky3eKbHv7iipwOsgJylQaIyc8PmSGrJciGq3InQsKRO70jmlcye3ZAgDowMx/Qg
M5V9GZh8hXqTGELJt/rMwo2VR1pF0q4XMVn0Ho0NIwPHk2ZMn4L2d4Oq6rrEUhQN
EHhBXp1k7yixbjENQx19hqXjsoiB1ew0uVdpSyT1P7r8/N9F7JleEVBcaCH7JxVh
qblPhIBJJgteUBhJvofBOfbulbt1H5+7qihX+b7Uh09Fwr/DDulvtO8cvTyRXqZ7
iPIeIV1hS2E270NOIE5imRABj2XXrL8LwaM4SdAtF4Cy0BUcKGi9HTzTp78FF1wE
kBu2epXui6LFz/OQCdPmujVrzoFEq3B6lEGD4tTHlkqDq9Y74D+r1QedgDMhPqsj
fy6hdyZg61aedxxiyadOBKVLNaCz+Cv2ax9JJgnd7yTiLnBnS+1VHlE1VWb9E5nB
/PNMZxhPBbnxYuU5WiERm3t2OuAPJgc+rYeAQqbqZ/lsOOzA2LtuqX3JR4GeTqqG
b/9LqPjuisy4RBFuj5meFzu4Zo16KWN9PSzj+LbwAz3up99jtHLSqjmxGd9kuBRy
RI4EKUlMgjlj0bFR8cWYww5vMue3og2p54hY2TgUrM6zTMarOScyTmMhXlOGtsa1
pKbfxfFLxtlhIadWNxPLbNa5ha0T8uqmIrNkBXisKgsdx8jdWaZiTThuc9l5jfoz
b/1FOcuPnsK0EpskE2RJ9JG1q6Ahpgea0sXid74RsyDGU0euA0ajaaU86RwJ/ddz
LznFWkhqknl7b4SGLk8V2nilaN/HaQ55lJfAgKc0xkSbVPkFMPGDNKo7A59Mou6h
aNUFjtCQNGxyUp7DCVb6f+xevnc/ojvvYIIh7R7Uf+tKoEe2hL1OhbPGHUSaCXMc
kfljzsqaBPgfeBfhvNZQzACgFigTq5xGwM3pbzPpY4IJyyOdaB4S3WGB96r2Nd2n
Rt7WoMPWP/PhoC1xF7uj7ZSOj9EyIsiFXe8BlhE3ozIkZkvtSOs5QzGR2AOUpjBD
ZI63Tq6cYWfjB1ClgFvYghPPwZN4MuWu6KGIjE9ugv5uornoUu9pWlkA3R++hG9z
RVhVlzMfjCkC9OVqx2+nUUWmPFM3oPO0l6BC0a2904buLG9qiOAPm6UI+ELGvQlV
t7N6kdDoc6lFejirt61B3rwqlW51XGwlSSRpNafYzsXMYk4QXb2Jz4LwKKgfd53D
4sGHn9VeoNa2n/JRe1//4l+lIZNZSoWyv4SKcn9TeGn4CS7zfuohJomqovQ6k5WT
rM0YCpgb0p29udAkeM5BKPezvEtp6xPs1c32Y6slFKLcLF7TVhl/ziX09A4cHPF1
MwdkbfRg/FRDlxWxnmfPsPBSBKOIrR3J23QWNVCcwsEd1h0pvh57j2AL8h4Bgk4M
Z3FH0lsK5WfVS3UwU+q53gJfV8j9XjpWMdRqRQbjudtEOvcbV7QTBMNeTsnlkf/e
1PhWncx6CaCFKqM8S0rcEvmWEs3wl8TLoIKzRor39kIsrTS9Wp+76JoSS4itxU1c
QesND1DcGrRB7e3Jc/qPoQHFgVtnP1D4KRbGDfkmWvNsBDo1S/FyJ7ZaVSiWRqh9
A98DyvcSw2woatl0JiNDJSQ2e2pw+NdxrjdfGuiTSdB/NwuxOfpzXj5XNXcOptHo
S2ZJ58nbDLhYIvY7MGZH2oGIXrn4j+haCp9d0pppA2F2Fdxrt7RFgvhobrUIw2VJ
aMHoVjQXUNVMYlqXDV24rv1azbsWb/+VsWUHvZI/Tx2OyWfKBPpQvFcYupwfbH4s
bNHwOk880bAk+brAX4ByRxeJWujznoQBBOYgBHjtrXA7wikRCTbd5Od6+l2ibuaG
BW3wBV+N4EbhurC8FuvONoYaYPy33JGpTHE5h81HwLOg3c1xmYQrgmlF+KoFX+zk
2ndUTHfmt6bonM6acmbTfAm6Cr03yGtTf0xCsNsWUYqRx/2lDHrnoQJwFLBBn5Kf
8JVr6Ld8kMKHRbhqV6+0NClLXuLfE+VcaV7+KP7VZA3Gv939RJ6oRmq09Nm2GRVJ
qJGcGbZTd/NO5Tmec9o+gck3BokftIDLTFgqPfN7ZZ4A3eWdurkB8WUn045B9fdY
qLGuPGU2EAsAT5pfgWMX9qM58Lpc5JOZ7AvfXSVuQqfYZIWIFl9QCXAIgQXUST90
V+pMgI032t8FEVeowUWVqPYBIBToHsixqiTxYEljKeVLtGhp1HRxNuljXa5cCcDv
rxuTCWh4gI+pGwcrZ1tgOdrW5YPfJqoTYbKD3oI+SSnDkTVUBnAnLj+Ya9x5looR
uxTv8EERq3igux1ko3SvHmmC+MGH3KaKVI0vKyI6Ae9FYzgvpcvsfNN/Lui8KmzI
eLa5oqwdd8YfUMuTqfoAQ6VrAQWTqlQ0+FavAtCYe3OFq7n/YBj2ynYAkAEk9aWE
Mi2W+sR1yClWd83NfsgNhJtFI1SmXI2kCN8efWfQJCtJfpG59IRVu5I4poa7ASwP
ZPpqaVJ6NSlB1jBW12cYUOmsvmzq3uQlVqefslaOSqRkUtH/gIWJjIOj+rqiWGLl
pv2b4kTbOpLjtfbPYpiUW0BkzVrgXXzhrrjpiNJtov5xA9L0Omsnn8Jrl4EcoVZN
ipRQq/plxDskg/kaR/GZmcpCOQ6ln1ezMRkWasmLuT7KjGAqYJm9p6YmfGydB8PL
SmB70tW4lu9VHIOeAVDN042jvWJxqwp2BiLvwiN5R7Duvd1M5E3mtwFWy1Giouq3
/94yQpwZHd9UUCtmSf3+MIsnaipY5CGaL7ExlPMNvb3AgcD2kL4c7FieKr29xCDg
hBB8FHZfFfjhycWMNTpYInhxFXcG0y0REODaReL9Ol+mmVVvQd6g4+4fkukI/GTP
pKJV9zTblIKEjTpf7CnDFPNsw8BLJiQdCCMQg/4Epx/u98RPO3g+rHj0Fx4TIfGq
ZeUnV6UENzuesJxiYI32FzTZ2tVfGlMP4ipF5x0i7G6Kps1MNnf7b3YqNphGK7Kq
v/H0XISUb2mBElYRX3CXDzcMn8qhFBc8+19rNUGidTMNSDJesjOugLJgS8zyFCCp
NYCrxTzo+/MZ5EcpvGI3dLeR7gbIovfc5PtFlGiooK25Ppz3kt1QCoGd4dhbkVoD
Y+jepjF3cb5OTUrQBC+NHqRxErO0xkaI5dZFjD6tOLVcdHIkKz6JvHfRruhI2Rfz
AMtYrkrZ+9pa+pKnTfufhBcq1wFYQE8flgNZ39XVBbf/N5K3uRH0BK+0uGMqSz8E
rXCCRcIQPHT4QYeFYLw9QFinNfCxw/c8C3vC3lQBE73WgvGzOWrfClut7Lc1OTrF
bzu346pSnNiyjaHxCfJWwRh/orqUwotWnSuJuB9gr/4JhfUEniAL3+wvAuc75jGw
HEviDYwSosUC6B2Is6OtennU57vZ8G1u/pFgAcAN13qrPINSe54MDKrRH//lmICh
buxTagQbUQGN2VHhaDwxwmReOkAASCEY3v5WQ2xF2rbWk2V34d5WB2VJxJrP3y9G
QbTAGLn9Ri6J3oLHhhpBBEYhlguiIdEiwC72qOEdoYMOmnrWpVmE88aUCxTf75mP
0Nxvl7xJPmfjIESaYx8Gj7pFzijDm/kCEkMQsNlJ5MTWzksF822uXac+eEC13HVB
NKUNz3yG7Bza5oHSpNfjfHEBfkwZaylYsELDHGf6GLeGeh09KRQKq9NrZ2X1b0YQ
QcptfQQWQpzgao5jfxHgHvrxiYBq85K2SRhYzecLubXg63DY6cbM+1Uacm40YUD6
ym2u4KSfBGaWfHUoDHyXnfByf8QFx1txINMGhNu9Ydea79cta1B1IwLl5+T5CVx5
9NetGwY6iGDbP7uGv388C0swsozvwWfSM9RYCj8lfPt+YCC/VASsfIhxhRGZPsG2
C/hvQ0ERBTqzri2lBfaSl/tqhw15TOkFjHNCda7f6cHzivaz6uZQO/V1Z+u2mjM2
fp2z9Dg9ZVV40moHbvj5ruWyJ22U3Gd8v/UEu04bVAHGAzRQ0bNSC3ZsCHIqnBkj
Kf8HDVJnInD9iigPKCD17TN4EicYIVcfeky6bV2l4Y3dYe8R82sBHOUttiXZF+Ek
1dbtbaGej4AGIEDC3M3FvcxCbxnJ0fJhdm8n87HrI/Fb9qgNLK/pVAtZvqExaAI4
xOWr/0yiLiyACiIcOELPx7ASdJUwK+32I36kyRY6Dgz6fioMNL/ZmtIXHw+i+c9r
oSgyAoQdXh0w4C+4SJ6XsL4NeWzkYtwn5SUkAhrJH4rAW4WPxUqsdB0Nc+dtw4Ku
iHDUzF8bbu4hNlSY55UCVzFUifmS7wnBGM1OftGA0mL2UMCsQM0H7Zu6y3coTPDl
8KvY55DM4nX43qZ7j1289+zKCcvFqRKyowVSnGTCsxPHSQQfhyq7JOvtxvApuxwt
MoMdVQJeqR8J76cUIVL618Z3INlkFu1MWltV2clFo4KImHtwuhFqR3FZSChuzfgi
SKJ5LorgShrlFbLKSn442//Mm7+czJpDM/x70KTlblq0IWktuTBI8Rs94wuQ5yGd
KdmAvd1JjG9DYKnDBKU7fvO8rQDSPfijhsxyMFniL8M63NC9W92ZB1ybUKD5h6/0
aP2NJnRnPD2/zF0y4cdbo/x8t5QK4HD3OQynYW12wRRr0W9AxPVxzqX8p0aASeoG
qTmFmLfhIqSjIzLP/Vr7vFz3Y81hvDOh8ZHakV3g3onKQ5opBUBSMpZacsR4u7Sp
sckdXbG465sO5v/rFTsP8A0g1yYrThjBG2s1Ab2xe8P7XApFLR7q2XjlLkHTFu9d
YPsHi3pt845WzExBP9wND0qZF8D7v03bRfj33LPToeH0qo4PaYKppzAX9lfmiHsB
29bzSLyqJ4FayyTyfoAipV0PIHKF9H9Cg4fjwFU9b8GqHITdeK16drqifcZQTfwI
FksnlBRQx+zXH/PboDEYIrOVkpb+5IsWASlVs12tTQhC+aA5eqwLBdQlxi12XDbh
fFqS9ZgBZHcJPGcp3svS4K3abIXIuz9lhI0SNiy78G3d2pps1y1ELiOM4muq1UrA
n7V9rl+0DRkde5X3IgmIRlfxbGXFxrkdQLim9pReNaz1WTlnCpiU+XA8k3DEHAw0
wD6/NGVBe58OmZvoOryLKJ8eBSA9w8FA5GftVUdJzEJ2qR0jD6PB3Dz9Wr+2DUE2
gpA9TlRmLEQkcJMr1xGWgKFZ+vDY9jd/Io3C9cKXfD/Vb3n9vagBt5qWKEi/Mv8e
Nj2i3vGgK+JA627htNXSlB3sB/zKFe/xyVI4XCVFWV3KLJtiUr9Ul6MYCGqM/RZh
e53CVd/pGIr5km+sNC33g4efMafIjto9ZCsYIGW6xZP2+pAPmyfoYm0ln8LlRP4+
M2AO6I9CTtTRoivcCDaUJaYyK+bqD8RTewP/H1YUdicYxdz+ZhlNrjq6LiPscDIK
S8Zde02G+hmvxUEu37cnEExJGJGLCKzYFieCdw195Vq3Rf1PigYDiWJENsVCnmll
dTJFXAnc29Y49tlw6b3oHZ+IPdi8sWeCaZY1uaqkSR+T8sJpr+/arccEWydIdLKd
uP2McfgtgWciD5iATxwIRwKUYrhghEP5yKrQcB2Br2v8eVS2jHRmBuLNcVhqlZNp
orN10PxpdFQUmL279Et0RgPknydG/TyVhjzAS+se9sfTT+2wTk+NNYK0yrY2/SYx
TPRMlxqI6FC68y/4ZbqDrU0p8m5aaKoghjU56rsiSaPfS8Rxa16dMUDKqlexem3u
FeMXnBezkt3JqiTvFjqjnEA5hbFiRojB+wLIjEmf4s8cmFlVWOx/IZ7PwwiQgbfZ
Ix5pYmu60t5rKlRlN9AowHO3PpsTfHg4Kdz+X+cLS76uDEbujS2DqrrLiyCWcnYp
rS2M7KivLcRb8KfvxWFemXfJ1LXm1elWaBSo9+f45TZpEpck3AuxZsZZDV3nuhkx
pR1gatNhPIbNmsYL0UkMnzL/C4AtVZCgfx3ezIQPXcIPhQIYzxLAPMzNYrjKUO9c
cEvhKY4eNRilzYWhn2ftyhGOU4xz5elw1Kk10Df/gIbCgngAzBemrelsYmpf4Hss
h5CL7h9IZMaADTl4kv3lW3QcYenQMay0ItQq8MahsvKIB8TQmdX5QknQrq+ltN/u
AN7v1Za8eNjHgnnJb7x5djM7Sg2Jbk0e/fqLCXPU9R0dFVCFVA1U3KB91NB8cuKc
/vB7KyMCGvDNfSRT5Nwkah+XTZZ2q63j5pj7LcbvXe42M0E7TkPmqGGkIX4vpqbR
7usou6GZu94CmJjVq3xTCxeCznQ7pUDRDdDxobX3VooGsRDUNFrprqDq8YeY+95A
+RFxZdmbSf2poShe+d8PFzuTfnFvQz/aKd6RfLRzBCp0BvBKGicICOqKWUW/SdBp
r/T8qvZhsyco+Ju9sB6B8fSN3K/5jg7iLElYOlQLX+eqv8LcpnmfDezx0RaqHmCU
vNaRQhWpaA5WBIDRFqjltbQUXPm3G+ShFU1fsUUYcrtGLqiEVUlVuqk+jFBsJvwA
99AftyP9XR37E2r+qEZtntYsOjZT6DfYgojpcwk3RA62KIkTAMaYNLTuZjKAsY7N
5AjqQ+K/R5zn4BGnAhepsiRev79kI+/5MLIlyTjFEurm/agZO9Kb6VINzyHzbtv7
vGWEYWqv3GFilfy7HKQJNKGLojJ5DYB7vEWzBFm+PIqAWgZfEzwLl3lFTtdTZ/3b
W2lRWa2O3x35hXVxG5hEJ5VYnFe3hHgmQ1l8/D46bSkt6hqgVMuXqrP7a/K5F9+O
g8IQ5L2N7DXBmoe7gVjdvJujuz+QhN616CAU9LD0+saZ/Rvj9uRwPlpyBcISAeH5
ftbfC7FCil++FT7zeIbVscD40aP7SLZ2Cb2Kv1/jC12jub6kp8LmrNpW444i6331
7OfpmOMGBaAyJypJeDC0xNNrEZ18RZ9e+77D8/rrkzj4gU1aqIZjMJIPuRhL6u5e
+zTo9DiRmUqeL+ZlsWIJe5d6yccBcAxGrOnin+akomfOzADIloQFqF5WbRYBW/fp
V4w6d2g7Jgt8tj1olooJgUqP4FndEzi7QUCUDgepQP/3mnoNmMIuh7HKOveO6JLi
TmBCmMs6n4fcqIo+C2MQkZyCeFLaqtfBlkfhI1F/z4NLRSX3beQEkl7+MjqSYJI/
1r1oTzeOX3aN/EC97qxpmrEp6ZdgWJXAWJFQN7DG5hEkVfAKSEXb3gvHSjkV4y8j
iaTavbxPSjKhU2QLgEIjwBpZ0Xo5Nca4k2eVo0RB6nNFFJUgSVQXgrOplAMUBawE
WOKgpDqKSODZnIaVYzFcPfjeCCQ2BetKUvCV8qW5nzcMNj6RToZ/+w+4keUpV9ke
xzxUcmEjS59jm1vS5V2faLSoJeC8RUMHaZW+4njiWgfE3UD0NSWWaax9hkSj91Jm
2PtY85An6Mxx/Ct8i9LfLSymlm47QZktaf87HYlL6oz8suqpYgVfASXlVq6Z2/th
OFcsM2wYjMzcNGsxdCffYUkhBPYH0VquAyL5+8euW57gDU5VAySIU2fEFOGq9UVe
IhOhQn/seNbcgDlLQ7KQiPKXzbtnfMSXIvmxnckPuy81hcPDxV+YIe8Wl455PfdY
PIDamm+1Tg9GKHYx1Vcuj4mhXHrXBlDxS8ApGE2/FysVyW+/btVpyKp4TOpskVAB
8qwfgmYhlf0/HM+g2V8BWabv2HOZxBExVTNM9gGKecq7JU0wAd/P81rYDumd9jcx
yvqG3ludULDEF5s4QjM/9+IfAoNlQDMuS4g+wYmF1oPVBdSY6IaAsYH3nBuH0SXJ
pqBe72nopK3uZuASocikoriwBp1lHhI5VK2toUjVntk0ymvtrL21eepaCYmXNTxa
CHDE104gARlJYN+vHzftpY5nu8+ncPMno8Tag9noWysdSkfS71MzN59U1Jtu3DwT
ZODZPEPTNdw1oSivjznoIsb9w+uDrb8xRoBKJ+BCjYeXL3ryBn0hAtz0o1k4JMLC
/CGUtnZYVbVAh06ShIpESNFTBB75fW7EOwUItqySm9wwGprkpMjlW5WgFTwmt3Xe
7SFFo05qmVJHw0xI0JiyYlf6VFoCQ1KTNhFtPU225UMUtqVJXVUBWomGUQ9Do4qX
KwJcPQaiOgIXr6ra6UZu/LIo73eCmp96gtvdFS86PQUIb6lJxfu/vf3hSk/Wq9VT
pL3A0mtIeIr1UaHvf3dH9LzEwKSacM6j0vwDFR8T2tRfQu26RlZbYgazG0wzJN1n
WAiNpPeU2z7mS8hOtfhkbBPnEYpyV556XEfFwUKdfobMaprDR4V4D4lmthWyR7cQ
orr1dVdjFDhWwmbOoRIepsMyJmenVwaAgshyAljJu+e2lfEj1W0c8v+wYWvMwkWX
iH3dCITxLM4f9ohO9cxiqkbg8VP+nksDwjgt/PDIxnp9ATqVyJ8E/tinCBTqICj9
Z1QOpv4iipzLtiqeEFdnPEDkpfKruoEwTkL2BWgHvlqxbs3YDwfkRbqd1A1W1Bed
hACS4Pw6X1SYL4ugoFxddSU9GU2cZwPWQzA6WIqKGKGlPUOAZigCtX4s7h0ai494
t2UAIheGbokMtWcIK1fcv+oWXsXEQRhNnDqPeHfVRjyHv3pk+R/kL1LEaNFskjGM
5/jvGEMZ+BLInJ82/9iSumKaDf4yy//CvHp8HD4atK91PrIZKggoWgGcAN8Xn4TW
SB9ywwubbuKGgtr3iGB48M227RWaKAh0kKxqkJjP+8FfqdrRM8VAmkFxAHYD1jcf
2M0otTOMax4RT43Wa6nNEhvG07FHJRKJcWbTRU7YzJf+Bb/xwesD+411LKVxWy2/
Xyp7m42Nk+iGuW2YX+TcIz05Fn7LONomRA7lbsSbmPsqLd7yrmctgVLhFyEahHtg
/ev+F5ihlAXYHyYCv+DbrRT4fpzwnr2ZezHPL2KsMfTrs+PZZxiMS0XxItZshaai
J07LtjTo0oEfCEWoHtQ94ag57vdCIsFoZD+f354vd8WOoi57MD+TecNjbrgze3gu
Ve2zIo4saSKurvzNecf43Zdr5nRng8JzcmwgbmuO7oQsjq2/5uSeTnSrDCjs9P6T
tptmbBG61pbO+PpnL3Tuaic7Y5WuFHHTkqLz60cf9id8GjHYVmd2paf5pGAtHAy4
ztfjfYVIR+nBvQhFEiy2Bi6ibzVHEukZpVGps+3qyrvDbQn47Pl0BgIbTB7rVlV/
oKFCMuWIii8tz/srlHxq27mQldEDyP2xoCBvDz0kOvTSB3fJrBmdz26r3UzACTEP
eMXszin6/DyINBnqOy3rUXguKzQiMPJt3T8Se8MaH4y27IBWA4shLy6p1RlcvsfI
/FB1gL3c2aONOVBPho8NesVUyecA6XnDpraM7Rv11DfrwffrLbdKuHWqN+MC5mvU
NJBthgL18u48VaudDR4mmEUk+Y4OQxq67xvi/7W6CYYQ/w6rdYrngMy9hY+x04b+
PQlwP6l9K+JkAobx3MoXlu2m+sgMyMOpttQm1bT6A2X6YvWN/irZVPrf4CVx+hQx
y7UoWcmJsV3IdQ18eQyTvoyo0Cx4jzkwa50DEOr3Publ7/l1MgJNyZ6nJtdKMGm1
KlAvWx73frOzsXELVyn7+Yiywje3/b9ACJ6827CaPSA9BxgGDkxjh+Iz/DEDqPAB
vE6rTOYKYk74iJAPnGhVL9VRh8Knq0om8mK6fwuv1qbLyHFyrJYMPcHsMtHK2HGh
bfbboe7P0oXA371yque0eScOz2I71oqE983BhkSbge2uuSU/dOokXYck7w2bAMUX
TXvoSqt4rPsb3uoVjnIn4Hh3B54ehl1XFUISyZp6imK8QWMoi71hOSXF54LZoCsM
AMPUAprpyAZvQSVX6Jx3xVZ6M32HzKZsy2O3eL+M7K82YQ6MaqmIz0OzZI0tC3uD
c7dROtR5kdCoBZiNEOnsS5t9mupVvfHNsejDGl0NcQ8opBQmmGbgJr0uXkrdAULP
YjcuXvaQbVnipndA7GkNUGf48UYlcp1+tVpjTvp68MwdNUiAXpcxXJxxXD65IknW
G0HEdBiUzV8mPkofMKPAvAfvixQCCqivNhuEzyBcMxA42vopRGr3xNYWcKnQVeoZ
0rczhTtyMj/Rh8QY9E7pB/ZgRJwr7UP98fGV7p2tuWRPr4Ugc5YtRGHKEBn0/kr8
Hd5VVhnXk4zdrpJX3glAqvkt05XtIAWVaP5rqfRfFjAdlhvnXTEolg1k8/PJkOMu
E6Ld/H+pFnhDapQKiJYaQ54JhIYcHmh7Z9dEoLwavkpJjA7KMrYKYBR6UMQdftKz
YH92/YszHPYaJJ8MOUvO2auvMWegOWFpxk7zXfIUTat55fY0nMmejYmwFEbcjshV
ENZiNzJHZaG/yujQU+SvxlO6B/u9LZr7PHllVB/1Uf+Y7xCd0CjqEWIJukXjbmvK
7XNN8ScKCa7xzBSP5g+rjTLeaFnDiFyadIk5EgxHS74+r56qZNDWVxzjtEvmd25r
LP1T0JBcV5tp70NaQSoU8y3LLkOSHwYCdk5wOjUQWMJyU5UNSlSOM39EJD/tT76g
fwkjTuGFOswD8eYyus/steLJjArP4C9X4RJkPkvbXqbY3RQJ4zu5d2PQQz9gXf4c
Q6RiSSBdA0qsem/FhvdgHIDyBB3Y9HeSIy644AkBSpSY4pR+yR7/6vi2FMt/iHBf
H5K9dDpB2r7u5quTYj13pZKTPzPMgWN9MAx3FLxblN9XCh64Y5K64A0rRI4VgZyt
YfDc+wIzfqqGzryP4gUvmjOtdqkXSVE7Z2SH3zMZ5HaML+BVqPPj1IJ0KU3J+ow5
L04+3G/bwCLriwWngYVh8JONg4xS0NJg6ztadDTkB0OFz8FKUgnoDeW3xA37HGkf
j8aBrIJZAYP0F/oxhXwSYZekREqCFFUqIw4NVjHEn6bkpOLLBlQ2DU6p/6rScHLw
y75a2CtCUBr9bIMUFhwhlN4XpBkiiWGikw3r149RfUz1pTFr8KVHneGZKOqCIa1g
u34LE5Qf+QS1t5PZ84A+Ku8ywL3N7dsQQfpqUpDjJODGeXHXeHvhM1CyVtjr1grK
MW5uFO09krS9GOnmxE9k6GeB1KKYzYD/RbWXdT6tXrELeIRTT2HOUTFoAHmDtD6e
FgAAwz6RSpqVUzRAPdp+hz8OOOG49iLWpeiAcSZ18Xb5ej1JOs+UHRJnGMmKEecj
30BYMoJCw/FChucOCh3qL134QDjZQdFshurFmfRsjKM3Ucnhe6l8fFv78paSxSUD
NuETDnY08iKiXUNiCzgCciCCKVP+tE5P/skivAvcdDXXwcZMpAd3OxPkRMeV9KlV
VJicJC0yz3fsptwUWZwB72QrNnv8oOQmBqPtb1wGqHt/xK0tnEPhxDPnr7XGugUb
SV/gka7kBUJQuC5HLfwscIrZOI7YI+F8m7lf2b2Lw//V4SjMJlXJrjMvpUUh4gqZ
rmW8Mo7WFecaxFNRSaLrBJ6pnJshzEohjqWijBLireHQy4Akwc3HPqksmBP5ONJA
TkwfWRMo7slkua6X4KdvysemmuaUJHjM6DSfrKNudh+QB7A9/tB0RWWXoydiBRIN
Jx9sneBpM7KCc65Qu306eTWHzeRaKGF9sZsBlb7+9e4trGhf67HioAdshURsK3el
LZcf8XScR9NNI1z6SD7Xxa7efv7J510j8g/2N51jtgjvs2zl2cmiE5YuZ6mwekFL
bRl1udiQeeAim/JLl+qV7uwBsf7GqLfuE+gGR4aem87NMN53+yusRiP7FM0JZRza
IhLYGxghavFZXhObhGgdD1uBynoyjNvl/I59nL8x+p1sn7beYP1hBKWR5UcFH87i
2FbuG7mVivuw6knoC3Mxbh8+xJhDs36RVNEAc+m7Ma7Wf/gUKSfnhIrDwpkt16pM
YfMPRjn8z4db6k9t55LISQEWk8pLS1Tp37ebd2acpVS6x83jJzYXWQuROsOMZE4N
GD1D7vzyT+iZ7BhQ+j+c7cbPnkvIGFDnI+u+xpLSVOs=
`pragma protect end_protected

//pragma protect end


`timescale 1 ns / 1 ns
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
Wuj7mS4Z6qDqSXRck/ZnaOf1sxnwIFcJZAmROEi4Ui59bOPTAhKpBj7b2qM6G2B4
Y3XjNrBkLgLyGi0Zc93qFlVOgJgP0Yz73v2LtELZtEDaN1K4GODqzdfqdWanvW1g
hq1WbVlFcU3WiBGhNtdMJWVlfizKZjVv6aHIw0r3BaZpVJdyWbbYKHWHhYAfYR/4
kJnLhm+21QDW3UDfmuWjHJi5lPMd3/GcIGGEEX8VAI4RmsMYrBtD7KZes2j5tGd3
Z+r++J4eYQdS3SL5Iox4/ySeVsIjNosp+7BrTkX2N0gyvTnXl7NJ9vcFqwfVj2Eh
agt0qU2QjK4Ad1HxTnq1ig==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 18640 )
`pragma protect data_block
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
k3aqGjOCoug7zghX1tIqmg==
`pragma protect end_protected

//pragma protect end


`timescale 1 ns / 1 ns
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
bYVgI5maVQvCBe36GZSrf1Y0CYPNjqo0YZeu5lcxKva746aZiEpZprMJIuiTxdHk
tbV8uuj3DDl//BnkJSC5qExXM8LV/ZRlvR8DWJeDCq2gTcm4BG5ipd4uizq42Mmt
JSdtiTPH2idsNsPwTAJruenpf/9JWA5kwjTRmfrLY94wPDnT4QAOJ13ByDTHm6ck
WY5R1WXroRrPEEToC7Sn70gNHwwVrv+f68J/j7RDLKuBC/fYvrHfXN9vB4ipPkoL
6ET/N2hvOlr08Kol8OL58SAUBk4Tc8Ttr0iLebRkgU7ey8Sl6q205tUuCycvrG+H
+Cpps9Io/mh7dFn7TD86zQ==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 5312 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
L/FrDcse8hKZwkn33vFqoSzpVsuubR2tN28yluDxj72BRlFJo+SRsMKgmfJ3tBYq
p2+Y3ufya04vtTXS++r01Z/0YzQ5BM0hem4fsq70biPfrknbqOboxOJ7IFkHwO2y
krMYSlaUa2On+4p+saD2YV7bhngH3kPIMt5fn9aN0yoddyBc+UaN2aFBts5lC4KY
7aIenpOA+fHG/bm/nAXw9flMMuaMIQWY9yFm/Emd2YlMZ2z0/GVWd6T82U9dFKKM
Qo1c5NfNA880x3AOkii0pbHlVlWFVtMhv16olcGBf8dbVToqtA/uNvA4m1t5HDyn
oQ/Ztj9PAEaLu7rkfvz3Ug==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 8464 )
`pragma protect data_block
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
QVXBgDbjHZKZZuteYIAAzw==
`pragma protect end_protected

//pragma protect end


`timescale 1 ns / 1 ns
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
oEkwq9qkPxeR0AINcoazjXcCl0CXGeejFRbccBUpcAbzsVr58g38Qq/kUC1PFWZ+
SIJYz0rt5oSCPh4hVz6PN4+ak5k2NAydcGqfDL2Xss0Yl2klNdOLRbGfW424Qeg6
UOLWwGzHCznxbfBb15Q6hUitEWFmXBnJGcVlNrHpQSgeW5ILxNLjhV2pvGZqO4aP
DNqWAKv59nPgJkut/J00Bxp9f8ou62EJooBm3H14tKLwMpfCo23VGcS4B9B5d3Ei
TIRfatRHSzf2wfsnhzqmPWn21sgMXOrxTvRvTwkwswOwMlI6tKNE7lxBx0Jmy1Oa
dMznhl6yZE4YVIxHXQCPYw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 3408 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


`timescale 1 ns / 1 ns
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
INfuvsFzZNTQYlzElTe1ZyvDvus+/agpywGyPMGW1zqYMjGf2RgtS0xuym04/QeV
+ZaY0TU1mvCPZgLhpxPzyYdDWD9Aiq9mhmJb8Ih1XOMxjHWlW524mIOLiD3THeDz
ZMq0zYDo4+Lhs/pqBJ0FxmjqXpXKn+KVFOPP9G+5O6zxkbGE1BhV/8KTfWs7xNar
ne/L5Y8jvVbqAG5WNiHr6h9um2mG6zNq+u3Jov+xWby/qwUdUzesy3Uu8VZsNf0r
8eclhs4kJuad7UJn7LdC6wpTtYzMEFfkxtabZV1DUnCXrYU9w2iskISZ00Ga1BOu
H9B/8bAdEAPxUfCmn+JRMg==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 22288 )
`pragma protect data_block
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
Ee9qDmsKUXA7NGue4Txesg==
`pragma protect end_protected

//pragma protect end


`timescale 1 ns / 1 ns
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
SvkKWu3JxyE3nZ0Cj2O+0NcKUN2ErzaXP9JcFCqjDJ6c1zXGjcsziIkL8Zl/uuiS
g2hxFn+IgSB2PAuAwvQYYmAr/fUYeY9rnWByrnWwk+b1jMGp7Kg6VmoDbpQYE971
X4K7wyCxVKzn7qflAXHBd5+CUEJkaMm8iNF/Oilks09TjlITleq0pK78BfBCdXfb
VghI06KPvMU4olwaamOFc1hG2bPtYHNtU8fcuwcDiwhTRJzciSnIfYh+WKimtm+D
2Alx6iEQ6gXFTgmZ/wpg/xca1QdkuZWtg8HnhZ1rApbej6WzkS7AFNgyK7yd7rNb
runKv4XvKsAbZ6Zx4JF6Pw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 14368 )
`pragma protect data_block
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
jPMU37vUsjJxTA0gtBaDQQ==
`pragma protect end_protected

//pragma protect end


`timescale 1 ns / 1 ns
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
P/1oh1y4fKbFiSzZZcHkF/NDZHE5Z56tZ7JmYBpab5DAIZQGq0C+2Dx8OR0+/KGw
f43aURzTzeP7WWN44ieTwNpiS0rhcMpCvU6B2D0eXpfu/jxK96HPMFVgGM0cpOQA
7YOkeW5nynCCrrarLJ75rYVmnmc2UeaDah8dIs5F9+WkqkYhYfVEDetn9gtHmG/z
auUi92s+TCIqDYTsIp6oI9b295GqLScROhjvHWs2fO0AzA8zPX6ZprqK20IkdS0U
++mBe61sQcw508Q4+dHoEH0FmCy8FyCizcxGx7Xp/zVJniPYXh5gaLmXPF+cMe8h
yEW9IWZIOG1RHD7rRDd0YA==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 19456 )
`pragma protect data_block
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
uYXUH06+F2wk04jZpERteA==
`pragma protect end_protected

//pragma protect end


`timescale 1 ns / 1 ns
//pragma protect
//pragma protect begin

/* Encryption Envelope */

`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "QuestaSim" , encrypt_agent_info = "2021.1"
`pragma protect key_keyowner = "Efinix Inc." , key_keyname = "EFX_K01"
`pragma protect key_method = "rsa"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 256 )
`pragma protect key_block
SdurnRePOv9sG56DbVa4wEbXfXI3ry7My1GjM4uXciWazx7e49hQXXcE8taQpbqi
2VtrdjrgnW4UFZXiq77rOxEk84MK4qnh4uxZN/6QrGxs4axKcg08OauMtHyBZamw
zcwg/y43o4Ce/saIz02spMmSM43g4NbXr46RgcmlMekHNowF078e+FtM+d3YyC0X
KW1ealGv0YGIPek/wJD3mIPIWx2lfNXNf5JL0ffFTe09fSK+Q035rw+ca/A8SSEc
sgoeKpQmfbJG+sDVE80u5EjVE2jQVpBlH24MS5/xwCSnUbkVYv883mxdS/F5KPiJ
HuO3zG0vTFuSLAa1iiPBOw==
`pragma protect data_method = "aes256-cbc"
`pragma protect encoding = ( enctype = "base64" , line_length = 64 , bytes = 4160 )
`pragma protect data_block
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
`pragma protect end_protected

//pragma protect end


`timescale 1 ns / 1 ns
module mii_if_3c48db7e8f7a4061b4268f003b844934
(
//Globle Signals
input                           tx_mac_aclk,
output  reg                     tx_mac_aclk_en,
input                           tx_reset,
output  wire                    rx_mac_aclk,
output  reg                     rx_mac_aclk_en,
input                           rx_reset,
//Configuration Signals
input           [2:0]           eth_speed,
//GMII Interface
output  reg     [7:0]           gm_rx_d,
output  reg                     gm_rx_dv,
output  reg                     gm_rx_err,
input           [7:0]           gm_tx_d,
input                           gm_tx_en,
input                           gm_tx_err,
//MII Interface
input                           mii_txc,
output  reg     [3:0]           mii_txd,
output  reg                     mii_tx_dv,
output  reg                     mii_tx_err,

input                           mii_rxc,
input           [3:0]           mii_rxd,
input                           mii_rx_dv,
input                           mii_rx_err

//Status and  Error Signals
);
// Parameter Define 
//localparam                      SPEED_100M_DIV = (TX_REFCLK == 125) ? 10 : 2;
//localparam                      SPEED_10M_DIV  = SPEED_100M_DIV*10;
//localparam                      SPEED_CLK_DIV = (TX_REFCLK == 125) ? SPEED_100M_DIV/2 + 1 : 0 ;
// Register Define 
reg     [6:0]                   aclk_en_cnt;
reg     [3:0]                   txd;
reg                             tx_en;
reg                             tx_er;
reg                             rx_dv_pre;
reg                             rx_dv_dl1;
reg     [3:0]                   rxd_pre;
reg     [3:0]                   rxd_dl1;
reg                             rx_odd_data_ptr;
reg     [3:0]                   rxd;
reg                             rx_dv;
reg                             rx_er;
reg     [3:0]                   gm_tx_d_h;
reg     [7:0]                   gm_tx_d_r;
reg                             gm_tx_en_r;
reg                             gm_tx_err_r;
reg				preamble_flg;
reg     [1:0]			cur_st;
reg     [1:0]			nxt_st;
reg				add_preamble;

// Wire Define

/*----------------------------------------------------------------------------------*\
                                 The main code
\*----------------------------------------------------------------------------------*/

/*----------------------- Tx Region ----------------------------*/

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        tx_mac_aclk_en <= 1'b0;
    else
        tx_mac_aclk_en <= ~tx_mac_aclk_en;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        gm_tx_d_r <= 8'h0;
    else if((gm_tx_en == 1'b1) && (tx_mac_aclk_en == 1'b1))
        gm_tx_d_r <= gm_tx_d;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        gm_tx_en_r <= 1'b0;
    else if(tx_mac_aclk_en == 1'b1)
        gm_tx_en_r <= gm_tx_en;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        gm_tx_err_r <= 1'b0;
    else if(tx_mac_aclk_en == 1'b1)
        gm_tx_err_r <= gm_tx_err;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        txd <= 4'h0;
    else if(gm_tx_en_r == 1'b1) 
        begin
            if(tx_mac_aclk_en == 1'b0)
                txd <= gm_tx_d_r[3:0];
            else
                txd <= gm_tx_d_r[7:4];
        end
    else;    
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        tx_en <= 1'b0;
    else 
        tx_en <= gm_tx_en_r;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        tx_er <= 1'b0;
    else 
        tx_er <= gm_tx_err_r;
end

always @(posedge mii_txc)
begin 
    mii_tx_dv  <= tx_en;
    mii_txd    <= txd[3:0];
    mii_tx_err <= tx_er;
end
/*----------------------- Rx Region ----------------------------*/
always @(posedge mii_rxc)
begin
   if(mii_rxd==4'hd && mii_rx_dv && !mii_rx_err && cur_st==2'b01 && preamble_flg)
   begin
      rxd   <= 4'h5;
      rx_dv <= 1'b1;
   end
   else if(add_preamble)
   begin
      rxd <= rxd_pre;
      rx_dv <= rx_dv_pre;
   end
   else
   begin
      rxd   <= mii_rxd;
      rx_dv <= mii_rx_dv;
      rx_er <= mii_rx_err;
   end
end

assign rx_mac_aclk = mii_rxc;

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
	begin
	rxd_pre <= 4'h0;
	rx_dv_pre <= 1'b0;
	end
    else if((mii_rxd==4'hd && mii_rx_dv && !mii_rx_err && cur_st==2'b01 && preamble_flg) || add_preamble)
	begin
	rxd_pre <= mii_rxd;
	rx_dv_pre <= mii_rx_dv;
	end
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
	add_preamble <= 1'b0;
    else if(mii_rxd==4'hd && mii_rx_dv && !mii_rx_err && cur_st==2'b01 && preamble_flg)
	add_preamble <= 1'b1;
     else if(!mii_rx_dv)
	add_preamble <= 1'b0;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_mac_aclk_en <= 1'b0;
    else
        rx_mac_aclk_en <= ~rx_mac_aclk_en;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
	begin
		cur_st <= 2'b00;
	end
     else
	begin
		cur_st <= nxt_st;
	end
end

always @*
begin
case(cur_st)
2'b00: begin
	if(mii_rxd==4'h5 && mii_rx_dv && !mii_rx_err)	
	nxt_st <= 2'b01;
	else
	nxt_st <= 2'b00;
       end
2'b01: begin
	if(mii_rxd==4'hd && mii_rx_dv && !mii_rx_err)
	nxt_st <= 2'b10;
	else if (mii_rxd==4'h5 && mii_rx_dv && !mii_rx_err)
	nxt_st <= 2'b01;
	else 
	nxt_st <= 2'b00;
	end
2'b10: begin
	if(mii_rx_dv) 
	nxt_st <= 2'b10;
	else
	nxt_st <= 2'b00;
	end
default: nxt_st <= 2'b00;
endcase
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        begin
            preamble_flg <= 1'b0;
	end
    else if(mii_rxd==4'h5 && mii_rx_dv && !mii_rx_err && cur_st==2'b01)
	begin
	    preamble_flg <= ~preamble_flg;
	end
    else begin
	    preamble_flg <= 1'b0;
	end
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        begin
            rx_dv_dl1 <= 1'b0;
            rxd_dl1 <= 4'h0;
        end
    else
        begin
            rx_dv_dl1 <= rx_dv;
            rxd_dl1 <= rxd;
        end
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        gm_rx_dv <= 1'b0;
    else
        gm_rx_dv <= rx_dv_dl1;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_odd_data_ptr <= 1'b0;
    else if(rx_dv == 1'b0)
        rx_odd_data_ptr <= 1'b0;
    else
        rx_odd_data_ptr <= ~rx_odd_data_ptr;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        gm_rx_d <= 8'h0;
    else if((rx_dv == 1'b1) && (rx_odd_data_ptr == 1'b1))
        gm_rx_d <= {rxd[3:0],rxd_dl1[3:0]};
    else;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        gm_rx_err <= 1'b0;
    else
        begin
            if(rx_er == 1'b1)
                gm_rx_err <= 1'b1;
            else if(rx_mac_aclk_en == 1'b1)
                gm_rx_err <= 1'b0;
        end
end


endmodule



//////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   
//       / / .'     /    
//    __/ /.'      /     
//   __   \       /      
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// ********************************
// Revisions:
// 1.0 Initial rev 
//
// *******************************

`timescale 1 ns / 1 ns
module `IP_MODULE_NAME(tsemac) #(
    parameter    VERSION = 32'h10,
    parameter    RXFIFO_EN = 1,
    parameter    RXFIFO_DTH = 2048,
    parameter    TXFIFO_EN = 1,
    parameter    TXFIFO_DTH = 2048,
    parameter    PHY_INTF_MODE = 0,  //0-rgmii_3c48db7e8f7a4061b4268f003b844934, 1-mii, 2-rmii, 3-gmii
    parameter    AXIS_DW = 8  // 8, 16, or 32
)
(
//Globle Signals
input                           mac_reset,//Globle Reset
input                           proto_reset,//Tx & Rx Reset
input                           tx_mac_aclk,//125M 
output  wire                    rx_mac_aclk,
output  wire    [2:0]           eth_speed,
//Receive AXI4-Stream Interface
input                           rx_axis_clk,
output  wire    [AXIS_DW-1:0]   rx_axis_mac_tdata,
output  wire                    rx_axis_mac_tvalid,
output  wire                    rx_axis_mac_tlast,
output  wire    [AXIS_DW/8-1:0] rx_axis_mac_tstrb,
output  wire                    rx_axis_mac_tuser,
input                           rx_axis_mac_tready,
//Transmit AXI4-Stream Interface
input                           tx_axis_clk,
input           [AXIS_DW-1:0]   tx_axis_mac_tdata,
input                           tx_axis_mac_tvalid,
input                           tx_axis_mac_tlast,
input           [AXIS_DW/8-1:0] tx_axis_mac_tstrb,
input                           tx_axis_mac_tuser,
output  wire                    tx_axis_mac_tready,
//AXI4-Lite Interface
input                           s_axi_aclk,//AXI Bus Clock.
input           [9:0]           s_axi_awaddr,//Write Address. byte address.
input                           s_axi_awvalid,//Write address valid.
output  wire                    s_axi_awready,//Write address ready.
input           [31:0]          s_axi_wdata,//Write data bus.
input                           s_axi_wvalid,//Write valid.
output  wire                    s_axi_wready,//Write ready.
output  wire    [1:0]           s_axi_bresp,//Write response.
output  wire                    s_axi_bvalid,//Write response valid.
input                           s_axi_bready,//Response ready.
input           [9:0]           s_axi_araddr,//Read address. byte address.
input                           s_axi_arvalid,//Read address valid.
output  wire                    s_axi_arready,//Read address ready.
output  wire    [1:0]           s_axi_rresp,//Read response.
output  wire    [31:0]          s_axi_rdata,//Read data.
output  wire                    s_axi_rvalid,//Read valid.
input                           s_axi_rready,//Read ready.              
//MDIO Interface
output  wire                    Mdo,//MII Management Data Output
output  wire                    MdoEn,//MII Management Data Output Enable
input                           Mdi,//MII Management Data Input
output  wire                    Mdc,//MII Management Data Clock 

//RGMII Interface
output  wire    [3:0]           rgmii_txd_HI,
output  wire    [3:0]           rgmii_txd_LO,
output  wire                    rgmii_tx_ctl_HI,
output  wire                    rgmii_tx_ctl_LO,
output  wire                    rgmii_txc_HI,
output  wire                    rgmii_txc_LO,
input           [3:0]           rgmii_rxd_HI,
input           [3:0]           rgmii_rxd_LO,
input                           rgmii_rx_ctl_HI,
input                           rgmii_rx_ctl_LO,
input                           rgmii_rxc,

//MII Interface
input                           mii_txc,
output  wire    [3:0]           mii_txd,
output  wire                    mii_tx_dv,
output  wire                    mii_tx_err,
input                           mii_rxc,
input           [3:0]           mii_rxd,
input                           mii_rx_dv,
input                           mii_rx_err,

//RMII Interface
input                           rmii_clk_ref,
output  wire    [1:0]           rmii_txd,
output  wire                    rmii_tx_en,
input           [1:0]           rmii_rxd,
input                           rmii_crs_dv,
input                           rmii_rx_err,

//GMII Interface
input                           gm_rx_c,
input           [7:0]           gm_rx_d,
input                           gm_rx_dv,
input                           gm_rx_err,
output  wire                    gm_tx_c,
output  wire    [7:0]           gm_tx_d,
output  wire                    gm_tx_en,
output  wire                    gm_tx_err
);

// Parameter Define 

// Register Define 

// Wire Define 
wire                    tx_mac_aclk_en;
wire                    rx_mac_aclk_en;
wire                    tx_mac_aclk_int;

//GMII Interface
wire    [7:0]           gm_rx_d_int;
wire                    gm_rx_dv_int;
wire                    gm_rx_err_int;
wire    [7:0]           gm_tx_d_int;
wire                    gm_tx_en_int;
wire                    gm_tx_err_int;

/*----------------------------------------------------------------------------------*\
                                 The main code
\*----------------------------------------------------------------------------------*/
generate if (PHY_INTF_MODE == 0) begin
    assign tx_mac_aclk_int = tx_mac_aclk;
end
else if (PHY_INTF_MODE == 1) begin
    assign tx_mac_aclk_int = mii_txc;
end
else if (PHY_INTF_MODE == 2) begin
    assign tx_mac_aclk_int = rmii_clk_ref;
end
else begin
    assign tx_mac_aclk_int = tx_mac_aclk;
end
endgenerate


/*----------------------- The Tri-mode Ethernet MAC core -----------------------*/
`IP_MODULE_NAME(tsemac_core) #(
    .VERSION    (10),
    .RXFIFO_EN  (RXFIFO_EN),
    .RXFIFO_DTH (RXFIFO_DTH),    
    .TXFIFO_EN  (TXFIFO_EN),
    .TXFIFO_DTH (TXFIFO_DTH),
    .AXIS_DW    (AXIS_DW) 
)
u_tse_mac
(
//Globle Signals
    .mac_reset                          (mac_reset                          ),
    .proto_reset                        (proto_reset                        ),
    .tx_mac_aclk                        (tx_mac_aclk_int                    ),
    .rx_mac_aclk                        (rx_mac_aclk                        ),
    .tx_mac_aclk_en                     (tx_mac_aclk_en                     ),
    .rx_mac_aclk_en                     (rx_mac_aclk_en                     ),
    .eth_speed                          (eth_speed                          ),
//Receive AXI4-Stream Interface 
    .rx_axis_clk                        (rx_axis_clk                        ),
    .rx_axis_mac_tdata                  (rx_axis_mac_tdata                  ),
    .rx_axis_mac_tvalid                 (rx_axis_mac_tvalid                 ),
    .rx_axis_mac_tlast                  (rx_axis_mac_tlast                  ),
    .rx_axis_mac_tstrb                  (rx_axis_mac_tstrb                  ),    
    .rx_axis_mac_tuser                  (rx_axis_mac_tuser                  ),
    .rx_axis_mac_tready                 (rx_axis_mac_tready                 ),
//Transmit AXI4-Stream Interface
    .tx_axis_clk                        (tx_axis_clk                        ),
    .tx_axis_mac_tdata                  (tx_axis_mac_tdata                  ),
    .tx_axis_mac_tvalid                 (tx_axis_mac_tvalid                 ),
    .tx_axis_mac_tlast                  (tx_axis_mac_tlast                  ),
    .tx_axis_mac_tstrb                  (tx_axis_mac_tstrb                  ),    
    .tx_axis_mac_tuser                  (tx_axis_mac_tuser                  ),
    .tx_axis_mac_tready                 (tx_axis_mac_tready                 ),
//GMII Interface
    .gm_rx_d                            (gm_rx_d_int                        ),
    .gm_rx_dv                           (gm_rx_dv_int                       ),
    .gm_rx_err                          (gm_rx_err_int                      ),
    .gm_tx_d                            (gm_tx_d_int                        ),
    .gm_tx_en                           (gm_tx_en_int                       ),
    .gm_tx_err                          (gm_tx_err_int                      ),
//AXI4-Lite Interface
    .s_axi_aclk                         (s_axi_aclk                         ),
    .s_axi_awaddr                       (s_axi_awaddr                       ),
    .s_axi_awvalid                      (s_axi_awvalid                      ),
    .s_axi_awready                      (s_axi_awready                      ),
    .s_axi_wdata                        (s_axi_wdata                        ),
    .s_axi_wvalid                       (s_axi_wvalid                       ),
    .s_axi_wready                       (s_axi_wready                       ),
    .s_axi_bresp                        (s_axi_bresp                        ),
    .s_axi_bvalid                       (s_axi_bvalid                       ),
    .s_axi_bready                       (s_axi_bready                       ),
    .s_axi_araddr                       (s_axi_araddr                       ),
    .s_axi_arvalid                      (s_axi_arvalid                      ),
    .s_axi_arready                      (s_axi_arready                      ),
    .s_axi_rresp                        (s_axi_rresp                        ),
    .s_axi_rdata                        (s_axi_rdata                        ),
    .s_axi_rvalid                       (s_axi_rvalid                       ),
    .s_axi_rready                       (s_axi_rready                       ),
//MDIO Interface
    .Mdo                                (Mdo                                ),
    .MdoEn                              (MdoEn                              ),
    .Mdi                                (Mdi                                ),
    .Mdc                                (Mdc                                )
);

/*----------------------- Physical Interface Region ----------------------------*/
generate 
if (PHY_INTF_MODE == 0) begin
    rgmii_if_3c48db7e8f7a4061b4268f003b844934 u_rgmii_if
    (
    //Globle Signals
        .tx_mac_aclk                        (tx_mac_aclk                        ),
        .tx_mac_aclk_en                     (tx_mac_aclk_en                     ),
        .tx_reset                           (mac_reset || proto_reset           ),
        .rx_mac_aclk                        (rx_mac_aclk                        ),
        .rx_mac_aclk_en                     (rx_mac_aclk_en                     ),
        .rx_reset                           (mac_reset || proto_reset           ),
    //Configuration Signals                                                     
        .eth_speed                          (eth_speed                          ),
        .rgmii_rxc_edge                     (1'b1                               ),
        .rgmii_txc_dly                      (1'b1                               ),
    //GMII Interface                                                            
        .gm_rx_d                            (gm_rx_d_int                        ),
        .gm_rx_dv                           (gm_rx_dv_int                       ),
        .gm_rx_err                          (gm_rx_err_int                      ),
        .gm_tx_d                            (gm_tx_d_int                        ),
        .gm_tx_en                           (gm_tx_en_int                       ),
        .gm_tx_err                          (gm_tx_err_int                      ),
    //RGMII Interface                                                           
        .rgmii_txd_HI                       (rgmii_txd_HI                       ),
        .rgmii_txd_LO                       (rgmii_txd_LO                       ),
        .rgmii_tx_ctl_HI                    (rgmii_tx_ctl_HI                    ),
        .rgmii_tx_ctl_LO                    (rgmii_tx_ctl_LO                    ),
        .rgmii_txc_HI                       (rgmii_txc_HI                       ),
        .rgmii_txc_LO                       (rgmii_txc_LO                       ),
        .rgmii_rxd_HI                       (rgmii_rxd_HI                       ),
        .rgmii_rxd_LO                       (rgmii_rxd_LO                       ),
        .rgmii_rx_ctl_HI                    (rgmii_rx_ctl_HI                    ),
        .rgmii_rx_ctl_LO                    (rgmii_rx_ctl_LO                    ),
        .rgmii_rxc                          (rgmii_rxc                          )
    );
end
else if (PHY_INTF_MODE == 1) begin
    mii_if_3c48db7e8f7a4061b4268f003b844934 u_mii_if
    (
    //Globle Signals
        .tx_mac_aclk                        (mii_txc                            ),
        .tx_mac_aclk_en                     (tx_mac_aclk_en                     ),
        .tx_reset                           (mac_reset || proto_reset           ),
        .rx_mac_aclk                        (rx_mac_aclk                        ),
        .rx_mac_aclk_en                     (rx_mac_aclk_en                     ),
        .rx_reset                           (mac_reset || proto_reset           ),
    //Configuration Signals                                                     
        .eth_speed                          (eth_speed                          ),
    //GMII Interface                                                            
        .gm_rx_d                            (gm_rx_d_int                        ),
        .gm_rx_dv                           (gm_rx_dv_int                       ),
        .gm_rx_err                          (gm_rx_err_int                      ),
        .gm_tx_d                            (gm_tx_d_int                        ),
        .gm_tx_en                           (gm_tx_en_int                       ),
        .gm_tx_err                          (gm_tx_err_int                      ),
    //MII Interface                                                           
        .mii_txc                            (mii_txc                       ),
        .mii_txd                            (mii_txd                       ),
        .mii_tx_dv                          (mii_tx_dv                     ),
        .mii_tx_err                         (mii_tx_err                    ),
        .mii_rxc                            (mii_rxc                       ),
        .mii_rxd                            (mii_rxd                       ),
        .mii_rx_dv                          (mii_rx_dv                     ),
        .mii_rx_err                         (mii_rx_err                    )
    );
end
else if (PHY_INTF_MODE == 2) begin
    rmii_if_3c48db7e8f7a4061b4268f003b844934 u_rmii_if
    (
    //Globle Signals
        .tx_mac_aclk                        (rmii_clk_ref                       ),
        .tx_mac_aclk_en                     (tx_mac_aclk_en                     ),
        .tx_reset                           (mac_reset || proto_reset           ),
        .rx_mac_aclk                        (rx_mac_aclk                        ),
        .rx_mac_aclk_en                     (rx_mac_aclk_en                     ),
        .rx_reset                           (mac_reset || proto_reset           ),
    //Configuration Signals                                                     
        .eth_speed                          (eth_speed                          ),
    //GMII Interface   
        .gm_rx_d                            (gm_rx_d_int                        ),
        .gm_rx_dv                           (gm_rx_dv_int                       ),
        .gm_rx_err                          (gm_rx_err_int                      ),
        .gm_tx_d                            (gm_tx_d_int                        ),
        .gm_tx_en                           (gm_tx_en_int                       ),
        .gm_tx_err                          (gm_tx_err_int                      ),
    //MII Interface                                                           
        .rmii_clk_ref                       (rmii_clk_ref                      ),
        .rmii_txd                           (rmii_txd                          ),
        .rmii_tx_en                         (rmii_tx_en                        ),
        .rmii_rxd                           (rmii_rxd                          ),
        .rmii_crs_dv                        (rmii_crs_dv                       ),
        .rmii_rx_err                        (rmii_rx_err                       )
    );
end
else if (PHY_INTF_MODE == 3) begin
    wire g_reset;
    reg rx_mac_aclk_en_int, tx_mac_aclk_en_int;
    
    assign rx_mac_aclk = gm_rx_c;
    assign g_reset = mac_reset || proto_reset;
    assign rx_mac_aclk_en = rx_mac_aclk_en_int;
    assign tx_mac_aclk_en = tx_mac_aclk_en_int;

    always @(posedge rx_mac_aclk or posedge g_reset)
    begin
        if(g_reset == 1'b1)
            rx_mac_aclk_en_int <= 1'b0;
        else
            rx_mac_aclk_en_int <= ~rx_mac_aclk_en_int;
    end
    
    always @(posedge tx_mac_aclk or posedge g_reset)
    begin
        if(g_reset == 1'b1)
            tx_mac_aclk_en_int <= 1'b0;
        else
            tx_mac_aclk_en_int <= ~tx_mac_aclk_en_int;
    end
    
    assign gm_rx_d_int   = gm_rx_d;
    assign gm_rx_dv_int  = gm_rx_dv;
    assign gm_rx_err_int = gm_rx_err;
    assign gm_tx_d       = gm_tx_d_int;
    assign gm_tx_en      = gm_tx_en_int;
    assign gm_tx_err     = gm_tx_err_int;
    assign gm_tx_c       = tx_mac_aclk;
end
endgenerate 

endmodule


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   
//       / / .'     /    
//    __/ /.'      /     
//   __   \       /      
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
// 1.0 Initial rev
//
// *******************************

`timescale 1 ns / 1 ns
module rgmii_if_3c48db7e8f7a4061b4268f003b844934#(
    parameter                       RGMII_SYNC_EN = 1
)
(
//Globle Signals
input                           tx_mac_aclk,
output  reg                     tx_mac_aclk_en,
input                           tx_reset,
output  wire                    rx_mac_aclk,
output  reg                     rx_mac_aclk_en,
input                           rx_reset,
//Configuration Signals
input           [2:0]           eth_speed,
input                           rgmii_rxc_edge,//0:DDIO Rising Edge; 1:DDIO Falling Edge; 
input                           rgmii_txc_dly,//0:rgmii_3c48db7e8f7a4061b4268f003b844934 tx clock delay disable; 1:rgmii_3c48db7e8f7a4061b4268f003b844934 tx clock delay enable;
//GMII Interface
output  reg     [7:0]           gm_rx_d,
output  reg                     gm_rx_dv,
output  reg                     gm_rx_err,
input           [7:0]           gm_tx_d,
input                           gm_tx_en,
input                           gm_tx_err,
//RGMII Interface
output  wire    [3:0]           rgmii_txd_HI,
output  wire    [3:0]           rgmii_txd_LO,
output  wire                    rgmii_tx_ctl_HI,
output  wire                    rgmii_tx_ctl_LO,
output  wire                    rgmii_txc_HI,//if rgmii_txc_dly set 0, used clk_125m clock. if rgmii_txc_dly set 1, used clk_125m_90deg clock.
output  wire                    rgmii_txc_LO,
input           [3:0]           rgmii_rxd_HI,
input           [3:0]           rgmii_rxd_LO,
input                           rgmii_rx_ctl_HI,
input                           rgmii_rx_ctl_LO,
input                           rgmii_rxc
//Status and  Error Signals
);

// Parameter Define 

// Register Define 
reg     [6:0]                   aclk_en_cnt;
reg     [7:0]                   txd;
reg                             tx_en;
reg                             tx_er;
reg     [1:0]                   txc;
reg                             rx_dv_dl1;
reg     [7:0]                   rxd_dl1;
reg                             rx_odd_data_ptr;

// Wire Define
wire                            rx_dv;
wire    [7:0]                   rxd;
wire                            rx_er;

/*----------------------------------------------------------------------------------*\
                                 The main code
\*----------------------------------------------------------------------------------*/

/*----------------------- Tx Region ----------------------------*/
always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        aclk_en_cnt <= 7'd0;
    else if((eth_speed == 3'h4) ||
            ((eth_speed == 3'h2) && (aclk_en_cnt == 7'd9)) ||
            ((eth_speed == 3'h1) && (aclk_en_cnt == 7'd99)))
        aclk_en_cnt <= 7'd0;
    else
        aclk_en_cnt <= aclk_en_cnt + 1'b1;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        tx_mac_aclk_en <= 1'b0;
    else if(aclk_en_cnt == 7'd0)
        tx_mac_aclk_en <= 1'b1;
    else
        tx_mac_aclk_en <= 1'b0;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        txd[7:4] <= 4'h0;
    else if((gm_tx_en == 1'b1) && (tx_mac_aclk_en == 1'b1))
        txd[7:4] <= gm_tx_d[7:4];
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        txd[3:0] <= 4'h0;
    else if((gm_tx_en == 1'b1) && (tx_mac_aclk_en == 1'b1))
        txd[3:0] <= gm_tx_d[3:0];
    else if(((eth_speed == 3'h2) && (aclk_en_cnt == 7'd6)) ||
            ((eth_speed == 3'h1) && (aclk_en_cnt == 7'd51)))
        txd[3:0] <= txd[7:4];
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        tx_en <= 1'b0;
    else if(tx_mac_aclk_en == 1'b1)
        tx_en <= gm_tx_en;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        tx_er <= 1'b0;
    else if(tx_mac_aclk_en == 1'b1)
        tx_er <= gm_tx_err;
end
/*
always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        txc <= 2'b0;
    else
        case(eth_speed)
        3'h4 :
            txc <= 2'b01;
        3'h2 :
            case(rgmii_txc_dly)
            1'b0 ://rgmii_3c48db7e8f7a4061b4268f003b844934 tx clock delay disable.
                if((aclk_en_cnt == 7'd0) || (aclk_en_cnt == 7'd5))
                    txc <= 2'b11;
                else if((aclk_en_cnt == 7'd3) || (aclk_en_cnt == 7'd8))
                    txc <= 2'b00;
            1'b1 ://rgmii_3c48db7e8f7a4061b4268f003b844934 tx clock delay enable.
                if((aclk_en_cnt == 7'd2) || (aclk_en_cnt == 7'd7))
                    txc <= 2'b11;
                else if((aclk_en_cnt == 7'd0) || (aclk_en_cnt == 7'd5))
                    txc <= 2'b00;
            endcase
        3'h1 :
            case(rgmii_txc_dly)
            1'b0 ://rgmii_3c48db7e8f7a4061b4268f003b844934 tx clock delay disable.
                if((aclk_en_cnt == 7'd0) || (aclk_en_cnt == 7'd50))
                    txc <= 2'b11;
                else if((aclk_en_cnt == 7'd25) || (aclk_en_cnt == 7'd75))
                    txc <= 2'b00;
            1'b1 ://rgmii_3c48db7e8f7a4061b4268f003b844934 tx clock delay enable.
                if((aclk_en_cnt == 7'd13) || (aclk_en_cnt == 7'd63))
                    txc <= 2'b11;
                else if((aclk_en_cnt == 7'd38) || (aclk_en_cnt == 7'd88))
                    txc <= 2'b00;
            endcase
        default :
            txc <= 2'b0;
        endcase
end

*/
reg [1:0]    txc_100m_r;
reg [1:0]    txc_10m_r;

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        txc_100m_r <= 2'b0;
    else
        case(rgmii_txc_dly)
        1'b0 ://rgmii_3c48db7e8f7a4061b4268f003b844934 tx clock delay disable.
            if((aclk_en_cnt == 7'd0) || (aclk_en_cnt == 7'd5))
                txc_100m_r <= 2'b11;
            else if((aclk_en_cnt == 7'd3) || (aclk_en_cnt == 7'd8))
                txc_100m_r <= 2'b00;
        1'b1 ://rgmii_3c48db7e8f7a4061b4268f003b844934 tx clock delay enable.
            if((aclk_en_cnt == 7'd2) || (aclk_en_cnt == 7'd7))
                txc_100m_r <= 2'b11;
            else if((aclk_en_cnt == 7'd0) || (aclk_en_cnt == 7'd5))
                txc_100m_r <= 2'b00;
        endcase
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        txc_10m_r <= 2'b0;
    else
        case(rgmii_txc_dly)
        1'b0 ://rgmii_3c48db7e8f7a4061b4268f003b844934 tx clock delay disable.
            if((aclk_en_cnt == 7'd0) || (aclk_en_cnt == 7'd50))
                txc_10m_r <= 2'b11;
            else if((aclk_en_cnt == 7'd25) || (aclk_en_cnt == 7'd75))
                txc_10m_r <= 2'b00;
        1'b1 ://rgmii_3c48db7e8f7a4061b4268f003b844934 tx clock delay enable.
            if((aclk_en_cnt == 7'd13) || (aclk_en_cnt == 7'd63))
                txc_10m_r <= 2'b11;
            else if((aclk_en_cnt == 7'd38) || (aclk_en_cnt == 7'd88))
                txc_10m_r <= 2'b00;
        endcase
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        txc <= 2'b0;
    else
        case(eth_speed)
            3'h4 :
                txc <= 2'b01;
            3'h2 :
                txc <= txc_100m_r;
            3'h1 :
                txc <= txc_10m_r;
            default :
                txc <= 2'b0;
        endcase
end

/*----------------------- Rx Region ----------------------------*/
assign rx_mac_aclk = rgmii_rxc;

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_mac_aclk_en <= 1'b0;
    else if(eth_speed[2] == 1'b1)
        rx_mac_aclk_en <= 1'b1;
    else
        rx_mac_aclk_en <= ~rx_mac_aclk_en;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        begin
            rx_dv_dl1 <= 1'b0;
            rxd_dl1 <= 8'h0;
        end
    else
        begin
            rx_dv_dl1 <= rx_dv;
            rxd_dl1 <= rxd;
        end
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        gm_rx_dv <= 1'b0;
    else
        gm_rx_dv <= rx_dv_dl1;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_odd_data_ptr <= 1'b0;
    else if(rx_dv == 1'b0)
        rx_odd_data_ptr <= 1'b0;
    else
        rx_odd_data_ptr <= ~rx_odd_data_ptr;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        gm_rx_d <= 8'h0;
    else
        begin
            if((eth_speed[2] == 1'b1) && (rx_dv_dl1 == 1'b1))
                gm_rx_d <= rxd_dl1;
            else if((rx_dv == 1'b1) && (rx_odd_data_ptr == 1'b1))
                gm_rx_d <= {rxd[3:0],rxd_dl1[3:0]};
        end
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        gm_rx_err <= 1'b0;
    else
        begin
            if(rx_er == 1'b1)
                gm_rx_err <= 1'b1;
            else if(rx_mac_aclk_en == 1'b1)
                gm_rx_err <= 1'b0;
        end
end

/*----------------------- PHY Interface ----------------------------*/
rgmii_3c48db7e8f7a4061b4268f003b844934 #(
    .RGMII_SYNC_EN                      (RGMII_SYNC_EN                      )
)
u_rgmii
(
//Globle Signals
    .tx_mac_aclk                        (tx_mac_aclk                        ),
//Configuration Signals
    .eth_speed                          (eth_speed                          ),
    .rgmii_rxc_edge                     (rgmii_rxc_edge                     ),
//Phy Interface
    .txd                                (txd                                ),
    .tx_en                              (tx_en                              ),
    .tx_er                              (tx_er                              ),
    .txc                                (txc                                ),
    .rxd                                (rxd                                ),
    .rx_dv                              (rx_dv                              ),
    .rx_er                              (rx_er                              ),
//RGMII Interface
    .rgmii_txd_HI                       (rgmii_txd_HI                       ),
    .rgmii_txd_LO                       (rgmii_txd_LO                       ),
    .rgmii_tx_ctl_HI                    (rgmii_tx_ctl_HI                    ),
    .rgmii_tx_ctl_LO                    (rgmii_tx_ctl_LO                    ),
    .rgmii_txc_HI                       (rgmii_txc_HI                       ),
    .rgmii_txc_LO                       (rgmii_txc_LO                       ),
    .rgmii_rxd_HI                       (rgmii_rxd_HI                       ),
    .rgmii_rxd_LO                       (rgmii_rxd_LO                       ),
    .rgmii_rx_ctl_HI                    (rgmii_rx_ctl_HI                    ),
    .rgmii_rx_ctl_LO                    (rgmii_rx_ctl_LO                    ),
    .rgmii_rxc                          (rgmii_rxc                          )
);

endmodule


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   
//       / / .'     /    
//    __/ /.'      /     
//   __   \       /      
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
// 1.0 Initial rev
//
// *******************************
`timescale 1 ns / 1 ns
module rgmii_sync_3c48db7e8f7a4061b4268f003b844934
(
//Globle Signals
input                           rgmii_rxc,
input           [2:0]           eth_speed,
//RGMII Rx Interface Input
input           [3:0]           rgmii_rxd_HI_i,
input           [3:0]           rgmii_rxd_LO_i,
input                           rgmii_rx_ctl_HI_i,
input                           rgmii_rx_ctl_LO_i,
//RGMII Rx Interface Output
output  reg     [3:0]           rgmii_rxd_HI_o,
output  reg     [3:0]           rgmii_rxd_LO_o,
output  reg                     rgmii_rx_ctl_HI_o,
output  reg                     rgmii_rx_ctl_LO_o
);


// Parameter Define 
parameter State_idle     = 2'd0;
parameter State_preamble = 2'd1;
parameter State_data_dl1 = 2'd2;
parameter State_data_dl2 = 2'd3;


// Register Define 
reg     [1:0]                   cur_state;
reg     [1:0]                   next_state;
reg                             preamble_odd;
reg     [7:0]                   rx_d_dl1;
reg                             rx_dv_dl1;
reg     [7:0]                   rx_d_dl2;
reg                             rx_dv_dl2;

// Wire Define

/*----------------------------------------------------------------------------------*\
                                 The main code
\*----------------------------------------------------------------------------------*/

always @(posedge rgmii_rxc)
begin
    rx_d_dl1[7:4] <= rgmii_rxd_HI_i;
    rx_d_dl1[3:0] <= rgmii_rxd_LO_i;
    rx_dv_dl1 <= rgmii_rx_ctl_HI_i;
    rx_d_dl2 <= rx_d_dl1;
    rx_dv_dl2 <= rx_dv_dl1;
end

/*----------------------- FSM Region ----------------------------*/
always @(posedge rgmii_rxc)
begin
	cur_state <= next_state;
end

always @(*)
begin
	case(cur_state)
    State_idle :
        if((rx_dv_dl1 == 1'b1) && (rx_d_dl1[3:0] == 4'h5))
            next_state = State_preamble;
        else
            next_state = State_idle;

    State_preamble : 
        if(rx_dv_dl1 == 1'b0)
            next_state = State_idle;
        else if((rx_d_dl1[3:0] == 4'hd) && (preamble_odd == 1'b0))
            next_state = State_data_dl1;
        else if((rx_d_dl1[3:0] == 4'hd) && (preamble_odd == 1'b1))
            next_state = State_data_dl2;
        else if(rx_d_dl1[3:0] != 4'h5)
            next_state = State_idle;
        else
            next_state = State_preamble;
        
    State_data_dl1 :
        if(rx_dv_dl1 == 1'b0)
            next_state = State_idle;
        else
            next_state = State_data_dl1;

    State_data_dl2 :
        if(rx_dv_dl2 == 1'b0)
            next_state = State_idle;
        else
            next_state = State_data_dl2;

    default :
        next_state = State_idle;
    endcase
end

always @(posedge rgmii_rxc)
begin
    if(cur_state == State_preamble)
        preamble_odd <= ~preamble_odd;
    else
        preamble_odd <= 1'b0;
end

/*----------------------- Sync Output Region ----------------------------*/

always @(posedge rgmii_rxc)
begin
    if(eth_speed[2] == 1'b1)
        rgmii_rxd_LO_o <= rgmii_rxd_LO_i;
    else if((cur_state == State_preamble) && (rx_d_dl1[3:0] == 4'hd) && (preamble_odd == 1'b1))
        rgmii_rxd_LO_o <= 4'h5;
    else if(cur_state == State_data_dl2)
        rgmii_rxd_LO_o <= rx_d_dl2[3:0];
    else
        rgmii_rxd_LO_o <= rx_d_dl1[3:0];
end

always @(posedge rgmii_rxc)
begin
    if(eth_speed[2] == 1'b1)
        rgmii_rxd_HI_o <= rgmii_rxd_HI_i;
    else
        rgmii_rxd_HI_o <= 4'h0;
end

always @(posedge rgmii_rxc)
begin
    if(eth_speed[2] == 1'b1)
        rgmii_rx_ctl_HI_o <= rgmii_rx_ctl_HI_i;
    else if((cur_state == State_preamble) && (rx_d_dl1[3:0] == 4'hd) && (preamble_odd == 1'b1))
        rgmii_rx_ctl_HI_o <= 1'b1;
    else if(cur_state == State_data_dl2)
        rgmii_rx_ctl_HI_o <= rx_dv_dl2;
    else
        rgmii_rx_ctl_HI_o <= rx_dv_dl1;
end

always @(posedge rgmii_rxc)
begin
    if(eth_speed[2] == 1'b1)
        rgmii_rx_ctl_LO_o <= rgmii_rx_ctl_LO_i;
    else if((cur_state == State_preamble) && (rx_d_dl1[3:0] == 4'hd) && (preamble_odd == 1'b1))
        rgmii_rx_ctl_LO_o <= 1'b1;
    else if(cur_state == State_data_dl2)
        rgmii_rx_ctl_LO_o <= rx_dv_dl2;
    else
        rgmii_rx_ctl_LO_o <= rx_dv_dl1;
end

endmodule


/////////////////////////////////////////////////////////////////////////////
//           _____       
//          / _______    Copyright (C) 2013-2020 Efinix Inc. All rights reserved.
//         / /       \   
//        / /  ..    /   
//       / / .'     /    
//    __/ /.'      /     
//   __   \       /      
//  /_/ /\ \_____/ /     
// ____/  \_______/      
//
// *******************************
// Revisions:
// 1.0 Initial rev
//
// *******************************

`timescale 1 ns / 1 ns
module rgmii_3c48db7e8f7a4061b4268f003b844934 #(
    parameter                       RGMII_SYNC_EN = 1
)
(
//Globle Signals
input                           tx_mac_aclk,
//Configuration Signals
input           [2:0]           eth_speed,
input                           rgmii_rxc_edge,//0:DDIO Rising Edge; 1:DDIO Falling Edge; 
//Phy Interface
input           [7:0]           txd,
input                           tx_en,
input                           tx_er,
input           [1:0]           txc,//if rgmii_txc_dly set 0, used clk_125m clock. if rgmii_txc_dly set 1, used clk_125m_90deg clock.
output  reg     [7:0]           rxd,
output  reg                     rx_dv,
output  reg                     rx_er,
//RGMII Interface
output  reg     [3:0]           rgmii_txd_HI,
output  reg     [3:0]           rgmii_txd_LO,
output  reg                     rgmii_tx_ctl_HI,
output  reg                     rgmii_tx_ctl_LO,
output  reg                     rgmii_txc_HI,
output  reg                     rgmii_txc_LO,
input           [3:0]           rgmii_rxd_HI,
input           [3:0]           rgmii_rxd_LO,
input                           rgmii_rx_ctl_HI,
input                           rgmii_rx_ctl_LO,
input                           rgmii_rxc
//Status and  Error Signals
);
// Parameter Define 

// Register Define 
reg     [3:0]                   rgmii_rxd_HI_d1;
reg                             rgmii_rx_ctl_HI_d1;
reg     [3:0]                   rgmii_txd_HI_r;
reg     [3:0]                   rgmii_txd_LO_r;
reg                             rgmii_tx_ctl_HI_r;
reg                             rgmii_tx_ctl_LO_r;
reg                             rgmii_txc_HI_r;
reg                             rgmii_txc_LO_r;
// Wire Define
wire                            tx_en_to_ddr;
wire                            rgmii_tx_ctl_int;
wire    [3:0]                   txd_falling;
/*----------------------------------------------------------------------------------*\
                                 The main code
\*----------------------------------------------------------------------------------*/

/*----------------------- RGMII Tx Region ----------------------------*/
assign tx_en_to_ddr = (eth_speed[2] == 1'b1) ? tx_en : tx_en && (!tx_er);
assign rgmii_tx_ctl_int = tx_en ^ tx_er;

assign txd_falling = (eth_speed[2] == 1'b1) ? txd[7:4] : txd[3:0];

always @(posedge tx_mac_aclk)
begin
    rgmii_txc_HI_r    <= txc[0];
    rgmii_txc_LO_r    <= txc[1];     
    rgmii_tx_ctl_HI_r <= tx_en_to_ddr;
    rgmii_tx_ctl_LO_r <= rgmii_tx_ctl_int;
    rgmii_txd_HI_r    <= txd[3:0];
    rgmii_txd_LO_r    <= txd_falling;
end

always @(posedge tx_mac_aclk)
begin
    rgmii_txc_HI    <= rgmii_txc_HI_r   ;
    rgmii_txc_LO    <= rgmii_txc_LO_r   ;
    rgmii_tx_ctl_HI <= rgmii_tx_ctl_HI_r;
    rgmii_tx_ctl_LO <= rgmii_tx_ctl_LO_r;
    rgmii_txd_HI    <= rgmii_txd_HI_r   ;
    rgmii_txd_LO    <= rgmii_txd_LO_r   ;
end

/*----------------------- RGMII Rx Region ----------------------------*/
//rgmii_rxd & rgmii_rx_ctl
always @(posedge rgmii_rxc)
begin
	rgmii_rxd_HI_d1 <= rgmii_rxd_HI;
	rgmii_rx_ctl_HI_d1 <= rgmii_rx_ctl_HI;
end

generate
if(RGMII_SYNC_EN == 0)
begin

always @(posedge rgmii_rxc)
begin
    if(eth_speed[2] == 1'b1)//1000M
        begin
            if(rgmii_rxc_edge == 1'b0)//0:DDIO Rising Edge
                begin
	                rxd[7:4] <= rgmii_rxd_LO;
	                rxd[3:0] <= rgmii_rxd_HI_d1;
                    rx_dv <= rgmii_rx_ctl_HI_d1;
                    rx_er <= rgmii_rx_ctl_HI_d1^rgmii_rx_ctl_LO;
                end
            else//1:DDIO Falling Edge
                begin
        	        rxd[7:4] <= rgmii_rxd_HI;
        	        rxd[3:0] <= rgmii_rxd_LO;
                    rx_dv <= rgmii_rx_ctl_LO;
                    rx_er <= rgmii_rx_ctl_LO^rgmii_rx_ctl_HI;
                end
        end
    else//100M or 10M
        begin
        	rxd[7:4] <= 4'b0;
        	rxd[3:0] <= rgmii_rxd_LO;
            rx_dv <= rgmii_rx_ctl_LO;
            rx_er <= rgmii_rx_ctl_LO^rgmii_rx_ctl_HI_d1;
        end
end

end
else
begin

reg     [3:0]                   rgmii_rxd_HI_i;
reg     [3:0]                   rgmii_rxd_LO_i;
reg                             rgmii_rx_ctl_HI_i;
reg                             rgmii_rx_ctl_LO_i;
wire    [3:0]                   rgmii_rxd_HI_sync;
wire    [3:0]                   rgmii_rxd_LO_sync;
wire                            rgmii_rx_ctl_HI_sync;
wire                            rgmii_rx_ctl_LO_sync;

always @(posedge rgmii_rxc)
begin
    if(eth_speed[2] == 1'b1)//1000M
        begin
            if(rgmii_rxc_edge == 1'b0)//0:DDIO Rising Edge
                begin
	                rgmii_rxd_HI_i <= rgmii_rxd_LO;
	                rgmii_rxd_LO_i <= rgmii_rxd_HI_d1;
                    rgmii_rx_ctl_HI_i <= rgmii_rx_ctl_HI_d1;
                    rgmii_rx_ctl_LO_i <= rgmii_rx_ctl_LO;
                end
            else//1:DDIO Falling Edge
                begin
	                rgmii_rxd_HI_i <= rgmii_rxd_HI;
	                rgmii_rxd_LO_i <= rgmii_rxd_LO;
                    rgmii_rx_ctl_HI_i <= rgmii_rx_ctl_HI;
                    rgmii_rx_ctl_LO_i <= rgmii_rx_ctl_LO;
                end
        end        
    else//100M or 10M
        begin
            rgmii_rxd_HI_i <= rgmii_rxd_HI_d1;
	        rgmii_rxd_LO_i <= rgmii_rxd_LO;
            rgmii_rx_ctl_HI_i <= rgmii_rx_ctl_LO;
            rgmii_rx_ctl_LO_i <= rgmii_rx_ctl_HI_d1;
        end
end

always @(posedge rgmii_rxc)
begin
	rxd[7:4] <= rgmii_rxd_HI_sync;
	rxd[3:0] <= rgmii_rxd_LO_sync;
    rx_dv <= rgmii_rx_ctl_HI_sync;
    rx_er <= rgmii_rx_ctl_HI_sync^rgmii_rx_ctl_LO_sync;
end

/*----------------------- RGMII Rx Sync Module -----------------------*/
rgmii_sync_3c48db7e8f7a4061b4268f003b844934 u_rgmii_sync
(
//Globle Signals
    .rgmii_rxc                  (rgmii_rxc                  ),
    .eth_speed                  (eth_speed                  ),
//RGMII Rx Interface Input
    .rgmii_rxd_HI_i             (rgmii_rxd_HI_i             ),
    .rgmii_rxd_LO_i             (rgmii_rxd_LO_i             ),
    .rgmii_rx_ctl_HI_i          (rgmii_rx_ctl_HI_i          ),
    .rgmii_rx_ctl_LO_i          (rgmii_rx_ctl_LO_i          ),
//RGMII Rx Interface Output
    .rgmii_rxd_HI_o             (rgmii_rxd_HI_sync          ),
    .rgmii_rxd_LO_o             (rgmii_rxd_LO_sync          ),
    .rgmii_rx_ctl_HI_o          (rgmii_rx_ctl_HI_sync       ),
    .rgmii_rx_ctl_LO_o          (rgmii_rx_ctl_LO_sync       )
);

end
endgenerate


endmodule


`timescale 1 ns / 1 ns
module rmii_if_3c48db7e8f7a4061b4268f003b844934
(
//Globle Signals
input                           tx_mac_aclk,
output  reg                     tx_mac_aclk_en,
input                           tx_reset,
output  wire                    rx_mac_aclk,
output  reg                     rx_mac_aclk_en,
input                           rx_reset,
//Configuration Signals
input           [2:0]           eth_speed,
//GMII Interface
output  reg     [7:0]           gm_rx_d,
output  reg                     gm_rx_dv,
output  reg                     gm_rx_err,
input           [7:0]           gm_tx_d,
input                           gm_tx_en,
input                           gm_tx_err,
//RGMII Interface
input                           rmii_clk_ref,
output  reg     [1:0]           rmii_txd,
output  reg                     rmii_tx_en,

input           [1:0]           rmii_rxd,
input                           rmii_crs_dv,
input                           rmii_rx_err

//Status and  Error Signals
);
// Parameter Define 

// Register Define 
reg     [6:0]                   aclk_en_cnt;
reg     [6:0]                   rx_aclk_en_cnt;
reg     [1:0]                   txd;
reg                             tx_en;
reg                             tx_er;
reg                             rx_err_dl1;
reg                             rx_dv_dl1;
reg     [7:0]                   rxd_dl1;
reg     [6:0]                   rx_odd_data_ptr;
reg     [3:0]                   rxd;
reg                             rx_dv;
reg                             rx_er;
reg     [7:0]                   gm_tx_d_temp;
reg                             tx_en_temp;
reg     [6:0]                   txbit_cnt;
reg                             rx_dv_compensate;
reg                             rx_err_compensate;
reg     [7:0]                   rx_d_compensate;
reg     [6:0]                   rx_compensate_cnt;
// Wire Define

/*----------------------------------------------------------------------------------*\
                                 The main code
\*----------------------------------------------------------------------------------*/

/*----------------------- Tx Region ----------------------------*/
always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        aclk_en_cnt <= 7'd0;
    else if(((eth_speed == 3'h2) && (aclk_en_cnt == 7'd3)) ||
            ((eth_speed == 3'h1) && (aclk_en_cnt == 7'd39)))
        aclk_en_cnt <= 7'd0;
    else
        aclk_en_cnt <= aclk_en_cnt + 1'b1;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        tx_mac_aclk_en <= 1'b0;
    else if(aclk_en_cnt == 7'd0)
        tx_mac_aclk_en <= 1'b1;
    else
        tx_mac_aclk_en <= 1'b0;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        gm_tx_d_temp <= 8'h0;
    else if((gm_tx_en == 1'b1) && (tx_mac_aclk_en == 1'b1))
        gm_tx_d_temp <= gm_tx_d;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        tx_en_temp <= 1'b0;
    else if(tx_mac_aclk_en == 1'b1)
        tx_en_temp <= gm_tx_en;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        txbit_cnt <= 7'd0;
    else if(((eth_speed == 3'h2) && (txbit_cnt == 7'd3)) ||
            ((eth_speed == 3'h1) && (txbit_cnt == 7'd39)))
        txbit_cnt <= 7'd0;
    else if(tx_en_temp == 1'b1)
        txbit_cnt <= txbit_cnt + 1'b1;
    else
        txbit_cnt <= 7'd0; 
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        txd <= 2'h0;
    else if(eth_speed == 3'h2)
        begin
            case(txbit_cnt[1:0])
                2'b00: txd <= gm_tx_d_temp[1:0];
                2'b01: txd <= gm_tx_d_temp[3:2];
                2'b10: txd <= gm_tx_d_temp[5:4];
                2'b11: txd <= gm_tx_d_temp[7:6];
                default; 
            endcase 
        end 
    else if(eth_speed == 3'h1)
        begin
            case(txbit_cnt[5:0])
                6'd00: txd <= gm_tx_d_temp[1:0];
                6'd10: txd <= gm_tx_d_temp[3:2];
                6'd20: txd <= gm_tx_d_temp[5:4];
                6'd30: txd <= gm_tx_d_temp[7:6];
                default; 
            endcase 
        end
    else;    
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        tx_en <= 1'b0;
    else 
        tx_en <= tx_en_temp;
end

always @(posedge tx_mac_aclk or posedge tx_reset)
begin
    if(tx_reset == 1'b1)
        tx_er <= 1'b0;
    else if(tx_mac_aclk_en == 1'b1)
        tx_er <= gm_tx_err;
end

always @(posedge rmii_clk_ref)
begin 
    rmii_tx_en  <= tx_en;
    rmii_txd    <= txd[1:0];
//    rmii_tx_err <= tx_er;
end

/*----------------------- Rx Region ----------------------------*/
always @(posedge rmii_clk_ref)
begin
	rxd   <= rmii_rxd;
    rx_dv <= rmii_crs_dv;
    rx_er <= rmii_rx_err;
end

assign rx_mac_aclk = rmii_clk_ref;

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_aclk_en_cnt <= 7'd0;
    else if(((eth_speed == 3'h2) && (rx_aclk_en_cnt == 7'd3)) ||
            ((eth_speed == 3'h1) && (rx_aclk_en_cnt == 7'd39)))
        rx_aclk_en_cnt <= 7'd0;
    else
        rx_aclk_en_cnt <= rx_aclk_en_cnt + 1'b1;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_mac_aclk_en <= 1'b0;
    else if(rx_aclk_en_cnt == 7'd0)
        rx_mac_aclk_en <= 1'b1;
    else
        rx_mac_aclk_en <= 1'b0;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_odd_data_ptr <= 7'd0;
    else if(((eth_speed == 3'h2) && (rx_odd_data_ptr == 7'd3)) ||
            ((eth_speed == 3'h1) && (rx_odd_data_ptr == 7'd39)) || (rx_dv == 1'b0))
        rx_odd_data_ptr <= 7'd0;
    else 
        rx_odd_data_ptr <= rx_odd_data_ptr + 1'b1;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_dv_dl1 <= 1'b0;
    else 
        rx_dv_dl1 <= rx_dv; 
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_err_dl1 <= 1'b0;
    else 
        rx_err_dl1 <= rx_er; 
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rxd_dl1 <= 8'h0;
    else if(eth_speed == 3'h2)
        begin
            case(rx_odd_data_ptr[1:0])
                2'b00: rxd_dl1[1:0] <= rxd;
                2'b01: rxd_dl1[3:2] <= rxd;
                2'b10: rxd_dl1[5:4] <= rxd;
                2'b11: rxd_dl1[7:6] <= rxd;
                default; 
            endcase 
        end 
    else if(eth_speed == 3'h1)
        begin
            case(rx_odd_data_ptr[5:0])
                6'd00: rxd_dl1[1:0] <= rxd;
                6'd10: rxd_dl1[3:2] <= rxd;
                6'd20: rxd_dl1[5:4] <= rxd;
                6'd30: rxd_dl1[7:6] <= rxd;
                default; 
            endcase 
        end
    else;    
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_compensate_cnt <= 7'b0;
    else if(rx_dv_dl1 == 1'b1)
        rx_compensate_cnt <= 7'b0;
    else if(((eth_speed == 3'h2) && (rx_compensate_cnt == 7'd3)) ||
            ((eth_speed == 3'h1) && (rx_compensate_cnt == 7'd39)))
        rx_compensate_cnt <= rx_compensate_cnt;
    else
        rx_compensate_cnt <= rx_compensate_cnt + 1;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_dv_compensate <= 1'b0;
    else if(((eth_speed == 3'h2) && (rx_compensate_cnt == 7'd3)) ||
            ((eth_speed == 3'h1) && (rx_compensate_cnt == 7'd39)))
        rx_dv_compensate <= 1'b0;
    else if((rx_dv_dl1 == 1'b1) && rx_odd_data_ptr == 7'd0)
        rx_dv_compensate <= 1'b1;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_err_compensate <= 1'b0;
    else if(((eth_speed == 3'h2) && (rx_compensate_cnt == 7'd3)) ||
            ((eth_speed == 3'h1) && (rx_compensate_cnt == 7'd39)))
        rx_err_compensate <= 1'b0;
    else if((rx_dv_dl1 == 1'b1) && (rx_err_dl1 == 1'b1) && rx_odd_data_ptr == 7'd0)
        rx_err_compensate <= 1'b1;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        rx_d_compensate <= 8'h0;
    else if((rx_dv_dl1 == 1'b1) && rx_odd_data_ptr == 7'd0)
        rx_d_compensate <= rxd_dl1;
    else;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        gm_rx_dv <= 1'b0;
    else if(rx_mac_aclk_en == 1'b1)
        gm_rx_dv <= rx_dv_compensate;
end


always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        gm_rx_d <= 8'h0;
    else if(rx_mac_aclk_en == 1'b1)
        gm_rx_d <= rx_d_compensate;
    else;
end

always @(posedge rx_mac_aclk or posedge rx_reset)
begin
    if(rx_reset == 1'b1)
        gm_rx_err <= 1'b0;
    else if(rx_mac_aclk_en == 1'b1)
        gm_rx_err <= rx_err_compensate;
end

endmodule


`undef IP_UUID
`undef IP_NAME_CONCAT
`undef IP_MODULE_NAME
